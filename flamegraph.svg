<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="733279"><g><title>anoncreds`glass_pumpkin::common::_is_safe_prime (251 samples, 0.03%)</title><rect x="0.0000%" y="421" width="0.0342%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="251"/><text x="0.2500%" y="431.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_prime (251 samples, 0.03%)</title><rect x="0.0000%" y="405" width="0.0342%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="251"/><text x="0.2500%" y="415.50"></text></g><g><title>anoncreds`glass_pumpkin::common::miller_rabin (227 samples, 0.03%)</title><rect x="0.0033%" y="389" width="0.0310%" height="15" fill="rgb(221,193,54)" fg:x="24" fg:w="227"/><text x="0.2533%" y="399.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (227 samples, 0.03%)</title><rect x="0.0033%" y="373" width="0.0310%" height="15" fill="rgb(248,212,6)" fg:x="24" fg:w="227"/><text x="0.2533%" y="383.50"></text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (227 samples, 0.03%)</title><rect x="0.0033%" y="357" width="0.0310%" height="15" fill="rgb(208,68,35)" fg:x="24" fg:w="227"/><text x="0.2533%" y="367.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (227 samples, 0.03%)</title><rect x="0.0033%" y="341" width="0.0310%" height="15" fill="rgb(232,128,0)" fg:x="24" fg:w="227"/><text x="0.2533%" y="351.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (224 samples, 0.03%)</title><rect x="0.0037%" y="325" width="0.0305%" height="15" fill="rgb(207,160,47)" fg:x="27" fg:w="224"/><text x="0.2537%" y="335.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (224 samples, 0.03%)</title><rect x="0.2110%" y="293" width="0.0305%" height="15" fill="rgb(228,23,34)" fg:x="1547" fg:w="224"/><text x="0.4610%" y="303.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (74 samples, 0.01%)</title><rect x="0.2415%" y="293" width="0.0101%" height="15" fill="rgb(218,30,26)" fg:x="1771" fg:w="74"/><text x="0.4915%" y="303.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (411 samples, 0.06%)</title><rect x="0.2054%" y="309" width="0.0560%" height="15" fill="rgb(220,122,19)" fg:x="1506" fg:w="411"/><text x="0.4554%" y="319.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (149 samples, 0.02%)</title><rect x="0.2722%" y="309" width="0.0203%" height="15" fill="rgb(250,228,42)" fg:x="1996" fg:w="149"/><text x="0.5222%" y="319.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (135 samples, 0.02%)</title><rect x="0.2741%" y="293" width="0.0184%" height="15" fill="rgb(240,193,28)" fg:x="2010" fg:w="135"/><text x="0.5241%" y="303.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (134 samples, 0.02%)</title><rect x="0.2742%" y="277" width="0.0183%" height="15" fill="rgb(216,20,37)" fg:x="2011" fg:w="134"/><text x="0.5242%" y="287.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (85 samples, 0.01%)</title><rect x="0.2809%" y="261" width="0.0116%" height="15" fill="rgb(206,188,39)" fg:x="2060" fg:w="85"/><text x="0.5309%" y="271.50"></text></g><g><title>anoncreds`glass_pumpkin::common::fermat (1,958 samples, 0.27%)</title><rect x="0.0375%" y="389" width="0.2670%" height="15" fill="rgb(217,207,13)" fg:x="275" fg:w="1958"/><text x="0.2875%" y="399.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (1,956 samples, 0.27%)</title><rect x="0.0378%" y="373" width="0.2667%" height="15" fill="rgb(231,73,38)" fg:x="277" fg:w="1956"/><text x="0.2878%" y="383.50"></text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (1,956 samples, 0.27%)</title><rect x="0.0378%" y="357" width="0.2667%" height="15" fill="rgb(225,20,46)" fg:x="277" fg:w="1956"/><text x="0.2878%" y="367.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (1,956 samples, 0.27%)</title><rect x="0.0378%" y="341" width="0.2667%" height="15" fill="rgb(210,31,41)" fg:x="277" fg:w="1956"/><text x="0.2878%" y="351.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (1,924 samples, 0.26%)</title><rect x="0.0421%" y="325" width="0.2624%" height="15" fill="rgb(221,200,47)" fg:x="309" fg:w="1924"/><text x="0.2921%" y="335.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (93 samples, 0.01%)</title><rect x="0.3709%" y="293" width="0.0127%" height="15" fill="rgb(226,26,5)" fg:x="2720" fg:w="93"/><text x="0.6209%" y="303.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.02%)</title><rect x="0.3693%" y="309" width="0.0232%" height="15" fill="rgb(249,33,26)" fg:x="2708" fg:w="170"/><text x="0.6193%" y="319.50"></text></g><g><title>anoncreds`glass_pumpkin::common::miller_rabin (769 samples, 0.10%)</title><rect x="0.3045%" y="389" width="0.1049%" height="15" fill="rgb(235,183,28)" fg:x="2233" fg:w="769"/><text x="0.5545%" y="399.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (769 samples, 0.10%)</title><rect x="0.3045%" y="373" width="0.1049%" height="15" fill="rgb(221,5,38)" fg:x="2233" fg:w="769"/><text x="0.5545%" y="383.50"></text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (769 samples, 0.10%)</title><rect x="0.3045%" y="357" width="0.1049%" height="15" fill="rgb(247,18,42)" fg:x="2233" fg:w="769"/><text x="0.5545%" y="367.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (769 samples, 0.10%)</title><rect x="0.3045%" y="341" width="0.1049%" height="15" fill="rgb(241,131,45)" fg:x="2233" fg:w="769"/><text x="0.5545%" y="351.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (758 samples, 0.10%)</title><rect x="0.3060%" y="325" width="0.1034%" height="15" fill="rgb(249,31,29)" fg:x="2244" fg:w="758"/><text x="0.5560%" y="335.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;u32&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (101 samples, 0.01%)</title><rect x="0.4094%" y="373" width="0.0138%" height="15" fill="rgb(225,111,53)" fg:x="3002" fg:w="101"/><text x="0.6594%" y="383.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_prime (2,870 samples, 0.39%)</title><rect x="0.0342%" y="405" width="0.3914%" height="15" fill="rgb(238,160,17)" fg:x="251" fg:w="2870"/><text x="0.2842%" y="415.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (119 samples, 0.02%)</title><rect x="0.4094%" y="389" width="0.0162%" height="15" fill="rgb(214,148,48)" fg:x="3002" fg:w="119"/><text x="0.6594%" y="399.50"></text></g><g><title>anoncreds`ursa::cl::issuer::Issuer::new_credential_def (3,196 samples, 0.44%)</title><rect x="0.0000%" y="533" width="0.4359%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="543.50"></text></g><g><title>anoncreds`ursa::cl::issuer::Issuer::_new_credential_primary_keys (3,196 samples, 0.44%)</title><rect x="0.0000%" y="517" width="0.4359%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="527.50"></text></g><g><title>anoncreds`ursa::cl::helpers::generate_safe_prime (3,196 samples, 0.44%)</title><rect x="0.0000%" y="501" width="0.4359%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="511.50"></text></g><g><title>anoncreds`ursa::cl::helpers::_generate_safe_prime (3,196 samples, 0.44%)</title><rect x="0.0000%" y="485" width="0.4359%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="495.50"></text></g><g><title>anoncreds`ursa::bn::BigNumber::generate_safe_prime (3,196 samples, 0.44%)</title><rect x="0.0000%" y="469" width="0.4359%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="479.50"></text></g><g><title>anoncreds`glass_pumpkin::safe_prime::new (3,196 samples, 0.44%)</title><rect x="0.0000%" y="453" width="0.4359%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="463.50"></text></g><g><title>anoncreds`glass_pumpkin::common::gen_safe_prime (3,196 samples, 0.44%)</title><rect x="0.0000%" y="437" width="0.4359%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="3196"/><text x="0.2500%" y="447.50"></text></g><g><title>anoncreds`glass_pumpkin::common::gen_prime (2,945 samples, 0.40%)</title><rect x="0.0342%" y="421" width="0.4016%" height="15" fill="rgb(226,3,54)" fg:x="251" fg:w="2945"/><text x="0.2842%" y="431.50"></text></g><g><title>anoncreds`glass_pumpkin::common::lucas (75 samples, 0.01%)</title><rect x="0.4256%" y="405" width="0.0102%" height="15" fill="rgb(245,192,40)" fg:x="3121" fg:w="75"/><text x="0.6756%" y="415.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (92 samples, 0.01%)</title><rect x="0.5145%" y="165" width="0.0125%" height="15" fill="rgb(238,167,29)" fg:x="3773" fg:w="92"/><text x="0.7645%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.02%)</title><rect x="0.5121%" y="181" width="0.0233%" height="15" fill="rgb(232,182,51)" fg:x="3755" fg:w="171"/><text x="0.7621%" y="191.50"></text></g><g><title>anoncreds`glass_pumpkin::common::fermat (850 samples, 0.12%)</title><rect x="0.4383%" y="261" width="0.1159%" height="15" fill="rgb(231,60,39)" fg:x="3214" fg:w="850"/><text x="0.6883%" y="271.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (849 samples, 0.12%)</title><rect x="0.4384%" y="245" width="0.1158%" height="15" fill="rgb(208,69,12)" fg:x="3215" fg:w="849"/><text x="0.6884%" y="255.50"></text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (849 samples, 0.12%)</title><rect x="0.4384%" y="229" width="0.1158%" height="15" fill="rgb(235,93,37)" fg:x="3215" fg:w="849"/><text x="0.6884%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (849 samples, 0.12%)</title><rect x="0.4384%" y="213" width="0.1158%" height="15" fill="rgb(213,116,39)" fg:x="3215" fg:w="849"/><text x="0.6884%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (835 samples, 0.11%)</title><rect x="0.4404%" y="197" width="0.1139%" height="15" fill="rgb(222,207,29)" fg:x="3229" fg:w="835"/><text x="0.6904%" y="207.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_prime (904 samples, 0.12%)</title><rect x="0.4361%" y="277" width="0.1233%" height="15" fill="rgb(206,96,30)" fg:x="3198" fg:w="904"/><text x="0.6861%" y="287.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (124 samples, 0.02%)</title><rect x="1.0036%" y="165" width="0.0169%" height="15" fill="rgb(218,138,4)" fg:x="7359" fg:w="124"/><text x="1.2536%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (173 samples, 0.02%)</title><rect x="1.0205%" y="165" width="0.0236%" height="15" fill="rgb(250,191,14)" fg:x="7483" fg:w="173"/><text x="1.2705%" y="175.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (136 samples, 0.02%)</title><rect x="1.0576%" y="149" width="0.0185%" height="15" fill="rgb(239,60,40)" fg:x="7755" fg:w="136"/><text x="1.3076%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (203 samples, 0.03%)</title><rect x="1.0520%" y="165" width="0.0277%" height="15" fill="rgb(206,27,48)" fg:x="7714" fg:w="203"/><text x="1.3020%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (652 samples, 0.09%)</title><rect x="1.0922%" y="149" width="0.0889%" height="15" fill="rgb(225,35,8)" fg:x="8009" fg:w="652"/><text x="1.3422%" y="159.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (232 samples, 0.03%)</title><rect x="1.1811%" y="149" width="0.0316%" height="15" fill="rgb(250,213,24)" fg:x="8661" fg:w="232"/><text x="1.4311%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,225 samples, 0.17%)</title><rect x="1.0806%" y="165" width="0.1671%" height="15" fill="rgb(247,123,22)" fg:x="7924" fg:w="1225"/><text x="1.3306%" y="175.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (256 samples, 0.03%)</title><rect x="1.2128%" y="149" width="0.0349%" height="15" fill="rgb(231,138,38)" fg:x="8893" fg:w="256"/><text x="1.4628%" y="159.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::resize (174 samples, 0.02%)</title><rect x="1.2516%" y="165" width="0.0237%" height="15" fill="rgb(231,145,46)" fg:x="9178" fg:w="174"/><text x="1.5016%" y="175.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::extend_with (167 samples, 0.02%)</title><rect x="1.2526%" y="149" width="0.0228%" height="15" fill="rgb(251,118,11)" fg:x="9185" fg:w="167"/><text x="1.5026%" y="159.50"></text></g><g><title>anoncreds`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (76 samples, 0.01%)</title><rect x="1.2754%" y="165" width="0.0104%" height="15" fill="rgb(217,147,25)" fg:x="9352" fg:w="76"/><text x="1.5254%" y="175.50"></text></g><g><title>anoncreds`core::cmp::min_by (131 samples, 0.02%)</title><rect x="1.2950%" y="117" width="0.0179%" height="15" fill="rgb(247,81,37)" fg:x="9496" fg:w="131"/><text x="1.5450%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (99 samples, 0.01%)</title><rect x="1.3185%" y="101" width="0.0135%" height="15" fill="rgb(209,12,38)" fg:x="9668" fg:w="99"/><text x="1.5685%" y="111.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (473 samples, 0.06%)</title><rect x="1.2857%" y="165" width="0.0645%" height="15" fill="rgb(227,1,9)" fg:x="9428" fg:w="473"/><text x="1.5357%" y="175.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (440 samples, 0.06%)</title><rect x="1.2902%" y="149" width="0.0600%" height="15" fill="rgb(248,47,43)" fg:x="9461" fg:w="440"/><text x="1.5402%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (430 samples, 0.06%)</title><rect x="1.2916%" y="133" width="0.0586%" height="15" fill="rgb(221,10,30)" fg:x="9471" fg:w="430"/><text x="1.5416%" y="143.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (274 samples, 0.04%)</title><rect x="1.3129%" y="117" width="0.0374%" height="15" fill="rgb(210,229,1)" fg:x="9627" fg:w="274"/><text x="1.5629%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (134 samples, 0.02%)</title><rect x="1.3320%" y="101" width="0.0183%" height="15" fill="rgb(222,148,37)" fg:x="9767" fg:w="134"/><text x="1.5820%" y="111.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (126 samples, 0.02%)</title><rect x="1.3542%" y="165" width="0.0172%" height="15" fill="rgb(234,67,33)" fg:x="9930" fg:w="126"/><text x="1.6042%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (136 samples, 0.02%)</title><rect x="1.3714%" y="165" width="0.0185%" height="15" fill="rgb(247,98,35)" fg:x="10056" fg:w="136"/><text x="1.6214%" y="175.50"></text></g><g><title>anoncreds`glass_pumpkin::common::fermat (6,041 samples, 0.82%)</title><rect x="0.5702%" y="245" width="0.8238%" height="15" fill="rgb(247,138,52)" fg:x="4181" fg:w="6041"/><text x="0.8202%" y="255.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (6,033 samples, 0.82%)</title><rect x="0.5713%" y="229" width="0.8227%" height="15" fill="rgb(213,79,30)" fg:x="4189" fg:w="6033"/><text x="0.8213%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (6,033 samples, 0.82%)</title><rect x="0.5713%" y="213" width="0.8227%" height="15" fill="rgb(246,177,23)" fg:x="4189" fg:w="6033"/><text x="0.8213%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (6,033 samples, 0.82%)</title><rect x="0.5713%" y="197" width="0.8227%" height="15" fill="rgb(230,62,27)" fg:x="4189" fg:w="6033"/><text x="0.8213%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (5,947 samples, 0.81%)</title><rect x="0.5830%" y="181" width="0.8110%" height="15" fill="rgb(216,154,8)" fg:x="4275" fg:w="5947"/><text x="0.8330%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (521 samples, 0.07%)</title><rect x="1.4057%" y="181" width="0.0711%" height="15" fill="rgb(244,35,45)" fg:x="10308" fg:w="521"/><text x="1.6557%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.02%)</title><rect x="1.4773%" y="181" width="0.0180%" height="15" fill="rgb(251,115,12)" fg:x="10833" fg:w="132"/><text x="1.7273%" y="191.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;num_bigint::biguint::BigUint&gt; (148 samples, 0.02%)</title><rect x="1.4983%" y="181" width="0.0202%" height="15" fill="rgb(240,54,50)" fg:x="10987" fg:w="148"/><text x="1.7483%" y="191.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (117 samples, 0.02%)</title><rect x="1.5026%" y="165" width="0.0160%" height="15" fill="rgb(233,84,52)" fg:x="11018" fg:w="117"/><text x="1.7526%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (115 samples, 0.02%)</title><rect x="1.5028%" y="149" width="0.0157%" height="15" fill="rgb(207,117,47)" fg:x="11020" fg:w="115"/><text x="1.7528%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="1.5034%" y="133" width="0.0151%" height="15" fill="rgb(249,43,39)" fg:x="11024" fg:w="111"/><text x="1.7534%" y="143.50"></text></g><g><title>anoncreds`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (154 samples, 0.02%)</title><rect x="5.3318%" y="165" width="0.0210%" height="15" fill="rgb(209,38,44)" fg:x="39097" fg:w="154"/><text x="5.5818%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,082 samples, 0.15%)</title><rect x="5.3532%" y="165" width="0.1476%" height="15" fill="rgb(236,212,23)" fg:x="39254" fg:w="1082"/><text x="5.6032%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,744 samples, 0.24%)</title><rect x="5.5008%" y="165" width="0.2378%" height="15" fill="rgb(242,79,21)" fg:x="40336" fg:w="1744"/><text x="5.7508%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (561 samples, 0.08%)</title><rect x="5.7432%" y="165" width="0.0765%" height="15" fill="rgb(211,96,35)" fg:x="42114" fg:w="561"/><text x="5.9932%" y="175.50"></text></g><g><title>anoncreds`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (109 samples, 0.01%)</title><rect x="5.8049%" y="149" width="0.0149%" height="15" fill="rgb(253,215,40)" fg:x="42566" fg:w="109"/><text x="6.0549%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1,146 samples, 0.16%)</title><rect x="5.8652%" y="149" width="0.1563%" height="15" fill="rgb(211,81,21)" fg:x="43008" fg:w="1146"/><text x="6.1152%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (200 samples, 0.03%)</title><rect x="6.0214%" y="149" width="0.0273%" height="15" fill="rgb(208,190,38)" fg:x="44154" fg:w="200"/><text x="6.2714%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,736 samples, 0.24%)</title><rect x="5.8197%" y="165" width="0.2367%" height="15" fill="rgb(235,213,38)" fg:x="42675" fg:w="1736"/><text x="6.0697%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.01%)</title><rect x="6.0565%" y="165" width="0.0104%" height="15" fill="rgb(237,122,38)" fg:x="44411" fg:w="76"/><text x="6.3065%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6,054 samples, 0.83%)</title><rect x="6.2144%" y="149" width="0.8256%" height="15" fill="rgb(244,218,35)" fg:x="45569" fg:w="6054"/><text x="6.4644%" y="159.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2,067 samples, 0.28%)</title><rect x="7.0400%" y="149" width="0.2819%" height="15" fill="rgb(240,68,47)" fg:x="51623" fg:w="2067"/><text x="7.2900%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,305 samples, 1.54%)</title><rect x="6.0681%" y="165" width="1.5417%" height="15" fill="rgb(210,16,53)" fg:x="44496" fg:w="11305"/><text x="6.3181%" y="175.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2,111 samples, 0.29%)</title><rect x="7.3219%" y="149" width="0.2879%" height="15" fill="rgb(235,124,12)" fg:x="53690" fg:w="2111"/><text x="7.5719%" y="159.50"></text></g><g><title>anoncreds`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (267 samples, 0.04%)</title><rect x="7.6148%" y="149" width="0.0364%" height="15" fill="rgb(224,169,11)" fg:x="55838" fg:w="267"/><text x="7.8648%" y="159.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (170 samples, 0.02%)</title><rect x="7.6281%" y="133" width="0.0232%" height="15" fill="rgb(250,166,2)" fg:x="55935" fg:w="170"/><text x="7.8781%" y="143.50"></text></g><g><title>anoncreds`alloc::slice::_&lt;impl [T]&gt;::to_vec (284 samples, 0.04%)</title><rect x="7.6146%" y="165" width="0.0387%" height="15" fill="rgb(242,216,29)" fg:x="55836" fg:w="284"/><text x="7.8646%" y="175.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (256 samples, 0.03%)</title><rect x="7.7275%" y="133" width="0.0349%" height="15" fill="rgb(230,116,27)" fg:x="56664" fg:w="256"/><text x="7.9775%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::finish_grow (109 samples, 0.01%)</title><rect x="7.7794%" y="69" width="0.0149%" height="15" fill="rgb(228,99,48)" fg:x="57045" fg:w="109"/><text x="8.0294%" y="79.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (254 samples, 0.03%)</title><rect x="7.7737%" y="85" width="0.0346%" height="15" fill="rgb(253,11,6)" fg:x="57003" fg:w="254"/><text x="8.0237%" y="95.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::reserve (392 samples, 0.05%)</title><rect x="7.7687%" y="133" width="0.0535%" height="15" fill="rgb(247,143,39)" fg:x="56966" fg:w="392"/><text x="8.0187%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (364 samples, 0.05%)</title><rect x="7.7725%" y="117" width="0.0496%" height="15" fill="rgb(236,97,10)" fg:x="56994" fg:w="364"/><text x="8.0225%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (356 samples, 0.05%)</title><rect x="7.7736%" y="101" width="0.0485%" height="15" fill="rgb(233,208,19)" fg:x="57002" fg:w="356"/><text x="8.0236%" y="111.50"></text></g><g><title>anoncreds`core::mem::replace (258 samples, 0.04%)</title><rect x="7.8314%" y="133" width="0.0352%" height="15" fill="rgb(216,164,2)" fg:x="57426" fg:w="258"/><text x="8.0814%" y="143.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::resize (1,569 samples, 0.21%)</title><rect x="7.6533%" y="165" width="0.2140%" height="15" fill="rgb(220,129,5)" fg:x="56120" fg:w="1569"/><text x="7.9033%" y="175.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::extend_with (1,492 samples, 0.20%)</title><rect x="7.6638%" y="149" width="0.2035%" height="15" fill="rgb(242,17,10)" fg:x="56197" fg:w="1492"/><text x="7.9138%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (112 samples, 0.02%)</title><rect x="7.8719%" y="149" width="0.0153%" height="15" fill="rgb(242,107,0)" fg:x="57723" fg:w="112"/><text x="8.1219%" y="159.50"></text></g><g><title>anoncreds`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (724 samples, 0.10%)</title><rect x="7.8674%" y="165" width="0.0987%" height="15" fill="rgb(251,28,31)" fg:x="57690" fg:w="724"/><text x="8.1174%" y="175.50"></text></g><g><title>anoncreds`core::mem::replace (508 samples, 0.07%)</title><rect x="7.8969%" y="149" width="0.0693%" height="15" fill="rgb(233,223,10)" fg:x="57906" fg:w="508"/><text x="8.1469%" y="159.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (297 samples, 0.04%)</title><rect x="8.1377%" y="101" width="0.0405%" height="15" fill="rgb(215,21,27)" fg:x="59672" fg:w="297"/><text x="8.3877%" y="111.50"></text></g><g><title>anoncreds`core::cmp::min_by (1,287 samples, 0.18%)</title><rect x="8.0605%" y="117" width="0.1755%" height="15" fill="rgb(232,23,21)" fg:x="59106" fg:w="1287"/><text x="8.3105%" y="127.50"></text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (424 samples, 0.06%)</title><rect x="8.1782%" y="101" width="0.0578%" height="15" fill="rgb(244,5,23)" fg:x="59969" fg:w="424"/><text x="8.4282%" y="111.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (915 samples, 0.12%)</title><rect x="8.2686%" y="101" width="0.1248%" height="15" fill="rgb(226,81,46)" fg:x="60632" fg:w="915"/><text x="8.5186%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (483 samples, 0.07%)</title><rect x="8.3275%" y="85" width="0.0659%" height="15" fill="rgb(247,70,30)" fg:x="61064" fg:w="483"/><text x="8.5775%" y="95.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (2,229 samples, 0.30%)</title><rect x="8.2360%" y="117" width="0.3040%" height="15" fill="rgb(212,68,19)" fg:x="60393" fg:w="2229"/><text x="8.4860%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1,075 samples, 0.15%)</title><rect x="8.3934%" y="101" width="0.1466%" height="15" fill="rgb(240,187,13)" fg:x="61547" fg:w="1075"/><text x="8.6434%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (287 samples, 0.04%)</title><rect x="8.5009%" y="85" width="0.0391%" height="15" fill="rgb(223,113,26)" fg:x="62335" fg:w="287"/><text x="8.7509%" y="95.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3,814 samples, 0.52%)</title><rect x="8.0200%" y="133" width="0.5201%" height="15" fill="rgb(206,192,2)" fg:x="58809" fg:w="3814"/><text x="8.2700%" y="143.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (4,201 samples, 0.57%)</title><rect x="7.9675%" y="165" width="0.5729%" height="15" fill="rgb(241,108,4)" fg:x="58424" fg:w="4201"/><text x="8.2175%" y="175.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3,899 samples, 0.53%)</title><rect x="8.0087%" y="149" width="0.5317%" height="15" fill="rgb(247,173,49)" fg:x="58726" fg:w="3899"/><text x="8.2587%" y="159.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (140 samples, 0.02%)</title><rect x="8.5404%" y="165" width="0.0191%" height="15" fill="rgb(224,114,35)" fg:x="62625" fg:w="140"/><text x="8.7904%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (137 samples, 0.02%)</title><rect x="8.5408%" y="149" width="0.0187%" height="15" fill="rgb(245,159,27)" fg:x="62628" fg:w="137"/><text x="8.7908%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.02%)</title><rect x="8.5410%" y="133" width="0.0185%" height="15" fill="rgb(245,172,44)" fg:x="62629" fg:w="136"/><text x="8.7910%" y="143.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (1,158 samples, 0.16%)</title><rect x="8.5756%" y="165" width="0.1579%" height="15" fill="rgb(236,23,11)" fg:x="62883" fg:w="1158"/><text x="8.8256%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (1,220 samples, 0.17%)</title><rect x="8.7335%" y="165" width="0.1664%" height="15" fill="rgb(205,117,38)" fg:x="64041" fg:w="1220"/><text x="8.9835%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (54,419 samples, 7.42%)</title><rect x="1.5226%" y="181" width="7.4213%" height="15" fill="rgb(237,72,25)" fg:x="11165" fg:w="54419"/><text x="1.7726%" y="191.50">anoncreds`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (323 samples, 0.04%)</title><rect x="8.8999%" y="165" width="0.0440%" height="15" fill="rgb(244,70,9)" fg:x="65261" fg:w="323"/><text x="9.1499%" y="175.50"></text></g><g><title>anoncreds`glass_pumpkin::common::miller_rabin (55,364 samples, 7.55%)</title><rect x="1.3940%" y="245" width="7.5502%" height="15" fill="rgb(217,125,39)" fg:x="10222" fg:w="55364"/><text x="1.6440%" y="255.50">anoncreds`..</text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (55,312 samples, 7.54%)</title><rect x="1.4011%" y="229" width="7.5431%" height="15" fill="rgb(235,36,10)" fg:x="10274" fg:w="55312"/><text x="1.6511%" y="239.50">anoncreds`..</text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (55,312 samples, 7.54%)</title><rect x="1.4011%" y="213" width="7.5431%" height="15" fill="rgb(251,123,47)" fg:x="10274" fg:w="55312"/><text x="1.6511%" y="223.50">anoncreds`..</text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (55,310 samples, 7.54%)</title><rect x="1.4014%" y="197" width="7.5428%" height="15" fill="rgb(221,13,13)" fg:x="10276" fg:w="55310"/><text x="1.6514%" y="207.50">anoncreds`..</text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (74 samples, 0.01%)</title><rect x="8.9561%" y="197" width="0.0101%" height="15" fill="rgb(238,131,9)" fg:x="65673" fg:w="74"/><text x="9.2061%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;u32&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (272 samples, 0.04%)</title><rect x="8.9443%" y="229" width="0.0371%" height="15" fill="rgb(211,50,8)" fg:x="65587" fg:w="272"/><text x="9.1943%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::rem_digit (217 samples, 0.03%)</title><rect x="8.9518%" y="213" width="0.0296%" height="15" fill="rgb(245,182,24)" fg:x="65642" fg:w="217"/><text x="9.2018%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_half (109 samples, 0.01%)</title><rect x="8.9666%" y="197" width="0.0149%" height="15" fill="rgb(242,14,37)" fg:x="65750" fg:w="109"/><text x="9.2166%" y="207.50"></text></g><g><title>anoncreds`&lt;u64 as num_integer::Integer&gt;::div_rem (79 samples, 0.01%)</title><rect x="8.9707%" y="181" width="0.0108%" height="15" fill="rgb(246,228,12)" fg:x="65780" fg:w="79"/><text x="9.2207%" y="191.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_prime (61,773 samples, 8.42%)</title><rect x="0.5604%" y="261" width="8.4242%" height="15" fill="rgb(213,55,15)" fg:x="4109" fg:w="61773"/><text x="0.8104%" y="271.50">anoncreds`gl..</text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (296 samples, 0.04%)</title><rect x="8.9442%" y="245" width="0.0404%" height="15" fill="rgb(209,9,3)" fg:x="65586" fg:w="296"/><text x="9.1942%" y="255.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_safe_prime (61,782 samples, 8.43%)</title><rect x="0.5594%" y="277" width="8.4254%" height="15" fill="rgb(230,59,30)" fg:x="4102" fg:w="61782"/><text x="0.8094%" y="287.50">anoncreds`gl..</text></g><g><title>anoncreds`getrandom::getrandom (120 samples, 0.02%)</title><rect x="8.9960%" y="181" width="0.0164%" height="15" fill="rgb(209,121,21)" fg:x="65966" fg:w="120"/><text x="9.2460%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (93 samples, 0.01%)</title><rect x="8.9997%" y="165" width="0.0127%" height="15" fill="rgb(220,109,13)" fg:x="65993" fg:w="93"/><text x="9.2497%" y="175.50"></text></g><g><title>anoncreds`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (122 samples, 0.02%)</title><rect x="8.9959%" y="197" width="0.0166%" height="15" fill="rgb(232,18,1)" fg:x="65965" fg:w="122"/><text x="9.2459%" y="207.50"></text></g><g><title>anoncreds`num_bigint::bigrand::gen_bits (185 samples, 0.03%)</title><rect x="8.9874%" y="245" width="0.0252%" height="15" fill="rgb(215,41,42)" fg:x="65903" fg:w="185"/><text x="9.2374%" y="255.50"></text></g><g><title>anoncreds`rand::Rng::fill (185 samples, 0.03%)</title><rect x="8.9874%" y="229" width="0.0252%" height="15" fill="rgb(224,123,36)" fg:x="65903" fg:w="185"/><text x="9.2374%" y="239.50"></text></g><g><title>anoncreds`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (123 samples, 0.02%)</title><rect x="8.9959%" y="213" width="0.0168%" height="15" fill="rgb(240,125,3)" fg:x="65965" fg:w="123"/><text x="9.2459%" y="223.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint (207 samples, 0.03%)</title><rect x="8.9848%" y="261" width="0.0282%" height="15" fill="rgb(205,98,50)" fg:x="65884" fg:w="207"/><text x="9.2348%" y="271.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (630 samples, 0.09%)</title><rect x="9.0135%" y="261" width="0.0859%" height="15" fill="rgb(205,185,37)" fg:x="66094" fg:w="630"/><text x="9.2635%" y="271.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (451 samples, 0.06%)</title><rect x="9.1265%" y="245" width="0.0615%" height="15" fill="rgb(238,207,15)" fg:x="66923" fg:w="451"/><text x="9.3765%" y="255.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (287 samples, 0.04%)</title><rect x="9.2161%" y="213" width="0.0391%" height="15" fill="rgb(213,199,42)" fg:x="67580" fg:w="287"/><text x="9.4661%" y="223.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (710 samples, 0.10%)</title><rect x="9.2553%" y="213" width="0.0968%" height="15" fill="rgb(235,201,11)" fg:x="67867" fg:w="710"/><text x="9.5053%" y="223.50"></text></g><g><title>anoncreds`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1,523 samples, 0.21%)</title><rect x="9.2041%" y="229" width="0.2077%" height="15" fill="rgb(207,46,11)" fg:x="67492" fg:w="1523"/><text x="9.4541%" y="239.50"></text></g><g><title>anoncreds`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (409 samples, 0.06%)</title><rect x="9.3561%" y="213" width="0.0558%" height="15" fill="rgb(241,35,35)" fg:x="68606" fg:w="409"/><text x="9.6061%" y="223.50"></text></g><g><title>anoncreds`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (377 samples, 0.05%)</title><rect x="9.3604%" y="197" width="0.0514%" height="15" fill="rgb(243,32,47)" fg:x="68638" fg:w="377"/><text x="9.6104%" y="207.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as core::cmp::PartialEq&gt;::eq (2,554 samples, 0.35%)</title><rect x="9.1886%" y="245" width="0.3483%" height="15" fill="rgb(247,202,23)" fg:x="67378" fg:w="2554"/><text x="9.4386%" y="255.50"></text></g><g><title>anoncreds`core::cmp::PartialEq::ne (917 samples, 0.13%)</title><rect x="9.4118%" y="229" width="0.1251%" height="15" fill="rgb(219,102,11)" fg:x="69015" fg:w="917"/><text x="9.6618%" y="239.50"></text></g><g><title>anoncreds`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (868 samples, 0.12%)</title><rect x="9.4185%" y="213" width="0.1184%" height="15" fill="rgb(243,110,44)" fg:x="69064" fg:w="868"/><text x="9.6685%" y="223.50"></text></g><g><title>anoncreds`&lt;T as core::option::SpecOptionPartialEq&gt;::eq (799 samples, 0.11%)</title><rect x="9.4279%" y="197" width="0.1090%" height="15" fill="rgb(222,74,54)" fg:x="69133" fg:w="799"/><text x="9.6779%" y="207.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (418 samples, 0.06%)</title><rect x="9.5567%" y="229" width="0.0570%" height="15" fill="rgb(216,99,12)" fg:x="70077" fg:w="418"/><text x="9.8067%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (180 samples, 0.02%)</title><rect x="9.7030%" y="165" width="0.0245%" height="15" fill="rgb(226,22,26)" fg:x="71150" fg:w="180"/><text x="9.9530%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (440 samples, 0.06%)</title><rect x="9.6756%" y="181" width="0.0600%" height="15" fill="rgb(217,163,10)" fg:x="70949" fg:w="440"/><text x="9.9256%" y="191.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (390 samples, 0.05%)</title><rect x="9.8736%" y="165" width="0.0532%" height="15" fill="rgb(213,25,53)" fg:x="72401" fg:w="390"/><text x="10.1236%" y="175.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1,455 samples, 0.20%)</title><rect x="9.7397%" y="181" width="0.1984%" height="15" fill="rgb(252,105,26)" fg:x="71419" fg:w="1455"/><text x="9.9897%" y="191.50"></text></g><g><title>anoncreds`core::result::Result&lt;T,E&gt;::unwrap_unchecked (83 samples, 0.01%)</title><rect x="9.9268%" y="165" width="0.0113%" height="15" fill="rgb(220,39,43)" fg:x="72791" fg:w="83"/><text x="10.1768%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,417 samples, 0.33%)</title><rect x="9.6318%" y="197" width="0.3296%" height="15" fill="rgb(229,68,48)" fg:x="70628" fg:w="2417"/><text x="9.8818%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (148 samples, 0.02%)</title><rect x="9.9412%" y="181" width="0.0202%" height="15" fill="rgb(252,8,32)" fg:x="72897" fg:w="148"/><text x="10.1912%" y="191.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;num_bigint::biguint::BigUint&gt; (3,029 samples, 0.41%)</title><rect x="9.5485%" y="245" width="0.4131%" height="15" fill="rgb(223,20,43)" fg:x="70017" fg:w="3029"/><text x="9.7985%" y="255.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (2,551 samples, 0.35%)</title><rect x="9.6137%" y="229" width="0.3479%" height="15" fill="rgb(229,81,49)" fg:x="70495" fg:w="2551"/><text x="9.8637%" y="239.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (2,459 samples, 0.34%)</title><rect x="9.6262%" y="213" width="0.3353%" height="15" fill="rgb(236,28,36)" fg:x="70587" fg:w="2459"/><text x="9.8762%" y="223.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::last (104 samples, 0.01%)</title><rect x="9.9617%" y="245" width="0.0142%" height="15" fill="rgb(249,185,26)" fg:x="73047" fg:w="104"/><text x="10.2117%" y="255.50"></text></g><g><title>anoncreds`&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (319 samples, 0.04%)</title><rect x="9.9886%" y="69" width="0.0435%" height="15" fill="rgb(249,174,33)" fg:x="73244" fg:w="319"/><text x="10.2386%" y="79.50"></text></g><g><title>anoncreds`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (424 samples, 0.06%)</title><rect x="9.9791%" y="101" width="0.0578%" height="15" fill="rgb(233,201,37)" fg:x="73175" fg:w="424"/><text x="10.2291%" y="111.50"></text></g><g><title>anoncreds`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (424 samples, 0.06%)</title><rect x="9.9791%" y="85" width="0.0578%" height="15" fill="rgb(221,78,26)" fg:x="73175" fg:w="424"/><text x="10.2291%" y="95.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint (442 samples, 0.06%)</title><rect x="9.9768%" y="197" width="0.0603%" height="15" fill="rgb(250,127,30)" fg:x="73158" fg:w="442"/><text x="10.2268%" y="207.50"></text></g><g><title>anoncreds`num_bigint::bigrand::gen_bits (438 samples, 0.06%)</title><rect x="9.9774%" y="181" width="0.0597%" height="15" fill="rgb(230,49,44)" fg:x="73162" fg:w="438"/><text x="10.2274%" y="191.50"></text></g><g><title>anoncreds`rand::Rng::fill (438 samples, 0.06%)</title><rect x="9.9774%" y="165" width="0.0597%" height="15" fill="rgb(229,67,23)" fg:x="73162" fg:w="438"/><text x="10.2274%" y="175.50"></text></g><g><title>anoncreds`&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::fill_bytes (429 samples, 0.06%)</title><rect x="9.9786%" y="149" width="0.0585%" height="15" fill="rgb(249,83,47)" fg:x="73171" fg:w="429"/><text x="10.2286%" y="159.50"></text></g><g><title>anoncreds`&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::fill_bytes (429 samples, 0.06%)</title><rect x="9.9786%" y="133" width="0.0585%" height="15" fill="rgb(215,43,3)" fg:x="73171" fg:w="429"/><text x="10.2286%" y="143.50"></text></g><g><title>anoncreds`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::fill_bytes (429 samples, 0.06%)</title><rect x="9.9786%" y="117" width="0.0585%" height="15" fill="rgb(238,154,13)" fg:x="73171" fg:w="429"/><text x="10.2286%" y="127.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint_below (450 samples, 0.06%)</title><rect x="9.9768%" y="213" width="0.0614%" height="15" fill="rgb(219,56,2)" fg:x="73158" fg:w="450"/><text x="10.2268%" y="223.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint_range (469 samples, 0.06%)</title><rect x="9.9768%" y="229" width="0.0640%" height="15" fill="rgb(233,0,4)" fg:x="73158" fg:w="469"/><text x="10.2268%" y="239.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,153 samples, 0.57%)</title><rect x="10.0625%" y="181" width="0.5664%" height="15" fill="rgb(235,30,7)" fg:x="73786" fg:w="4153"/><text x="10.3125%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,007 samples, 0.14%)</title><rect x="10.6370%" y="181" width="0.1373%" height="15" fill="rgb(250,79,13)" fg:x="77999" fg:w="1007"/><text x="10.8870%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (307 samples, 0.04%)</title><rect x="10.8024%" y="165" width="0.0419%" height="15" fill="rgb(211,146,34)" fg:x="79212" fg:w="307"/><text x="11.0524%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (128 samples, 0.02%)</title><rect x="10.8832%" y="101" width="0.0175%" height="15" fill="rgb(228,22,38)" fg:x="79804" fg:w="128"/><text x="11.1332%" y="111.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (273 samples, 0.04%)</title><rect x="10.8650%" y="117" width="0.0372%" height="15" fill="rgb(235,168,5)" fg:x="79671" fg:w="273"/><text x="11.1150%" y="127.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (297 samples, 0.04%)</title><rect x="10.9204%" y="101" width="0.0405%" height="15" fill="rgb(221,155,16)" fg:x="80077" fg:w="297"/><text x="11.1704%" y="111.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (450 samples, 0.06%)</title><rect x="10.9042%" y="117" width="0.0614%" height="15" fill="rgb(215,215,53)" fg:x="79958" fg:w="450"/><text x="11.1542%" y="127.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;num_bigint::biguint::BigUint&gt; (1,312 samples, 0.18%)</title><rect x="10.7997%" y="181" width="0.1789%" height="15" fill="rgb(223,4,10)" fg:x="79192" fg:w="1312"/><text x="11.0497%" y="191.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (985 samples, 0.13%)</title><rect x="10.8443%" y="165" width="0.1343%" height="15" fill="rgb(234,103,6)" fg:x="79519" fg:w="985"/><text x="11.0943%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (949 samples, 0.13%)</title><rect x="10.8492%" y="149" width="0.1294%" height="15" fill="rgb(227,97,0)" fg:x="79555" fg:w="949"/><text x="11.0992%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (935 samples, 0.13%)</title><rect x="10.8511%" y="133" width="0.1275%" height="15" fill="rgb(234,150,53)" fg:x="79569" fg:w="935"/><text x="11.1011%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (80 samples, 0.01%)</title><rect x="10.9677%" y="117" width="0.0109%" height="15" fill="rgb(228,201,54)" fg:x="80424" fg:w="80"/><text x="11.2177%" y="127.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_core (180 samples, 0.02%)</title><rect x="10.9804%" y="117" width="0.0245%" height="15" fill="rgb(222,22,37)" fg:x="80517" fg:w="180"/><text x="11.2304%" y="127.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::sub_mul_digit_same_len (133 samples, 0.02%)</title><rect x="10.9868%" y="101" width="0.0181%" height="15" fill="rgb(237,53,32)" fg:x="80564" fg:w="133"/><text x="11.2368%" y="111.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as num_integer::Integer&gt;::div_rem (203 samples, 0.03%)</title><rect x="10.9796%" y="149" width="0.0277%" height="15" fill="rgb(233,25,53)" fg:x="80511" fg:w="203"/><text x="11.2296%" y="159.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_ref (203 samples, 0.03%)</title><rect x="10.9796%" y="133" width="0.0277%" height="15" fill="rgb(210,40,34)" fg:x="80511" fg:w="203"/><text x="11.2296%" y="143.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for num_bigint::biguint::BigUint&gt;::rem (208 samples, 0.03%)</title><rect x="10.9790%" y="181" width="0.0284%" height="15" fill="rgb(241,220,44)" fg:x="80507" fg:w="208"/><text x="11.2290%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (205 samples, 0.03%)</title><rect x="10.9794%" y="165" width="0.0280%" height="15" fill="rgb(235,28,35)" fg:x="80510" fg:w="205"/><text x="11.2294%" y="175.50"></text></g><g><title>anoncreds`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,401 samples, 0.19%)</title><rect x="41.9322%" y="165" width="0.1911%" height="15" fill="rgb(210,56,17)" fg:x="307480" fg:w="1401"/><text x="42.1822%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8,911 samples, 1.22%)</title><rect x="42.1242%" y="165" width="1.2152%" height="15" fill="rgb(224,130,29)" fg:x="308888" fg:w="8911"/><text x="42.3742%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (14,352 samples, 1.96%)</title><rect x="43.3394%" y="165" width="1.9572%" height="15" fill="rgb(235,212,8)" fg:x="317799" fg:w="14352"/><text x="43.5894%" y="175.50">a..</text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 samples, 0.04%)</title><rect x="45.2967%" y="165" width="0.0393%" height="15" fill="rgb(223,33,50)" fg:x="332151" fg:w="288"/><text x="45.5467%" y="175.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (254 samples, 0.03%)</title><rect x="45.7552%" y="149" width="0.0346%" height="15" fill="rgb(219,149,13)" fg:x="335513" fg:w="254"/><text x="46.0052%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (288 samples, 0.04%)</title><rect x="45.7898%" y="149" width="0.0393%" height="15" fill="rgb(250,156,29)" fg:x="335767" fg:w="288"/><text x="46.0398%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,633 samples, 0.63%)</title><rect x="45.3359%" y="165" width="0.6318%" height="15" fill="rgb(216,193,19)" fg:x="332439" fg:w="4633"/><text x="45.5859%" y="175.50"></text></g><g><title>anoncreds`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (966 samples, 0.13%)</title><rect x="45.8360%" y="149" width="0.1317%" height="15" fill="rgb(216,135,14)" fg:x="336106" fg:w="966"/><text x="46.0860%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9,434 samples, 1.29%)</title><rect x="46.3453%" y="149" width="1.2865%" height="15" fill="rgb(241,47,5)" fg:x="339840" fg:w="9434"/><text x="46.5953%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,686 samples, 0.23%)</title><rect x="47.6318%" y="149" width="0.2299%" height="15" fill="rgb(233,42,35)" fg:x="349274" fg:w="1686"/><text x="47.8818%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (14,357 samples, 1.96%)</title><rect x="45.9678%" y="165" width="1.9579%" height="15" fill="rgb(231,13,6)" fg:x="337072" fg:w="14357"/><text x="46.2178%" y="175.50">a..</text></g><g><title>anoncreds`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (469 samples, 0.06%)</title><rect x="47.8617%" y="149" width="0.0640%" height="15" fill="rgb(207,181,40)" fg:x="350960" fg:w="469"/><text x="48.1117%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (182 samples, 0.02%)</title><rect x="47.9775%" y="117" width="0.0248%" height="15" fill="rgb(254,173,49)" fg:x="351809" fg:w="182"/><text x="48.2275%" y="127.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (659 samples, 0.09%)</title><rect x="47.9257%" y="165" width="0.0899%" height="15" fill="rgb(221,1,38)" fg:x="351429" fg:w="659"/><text x="48.1757%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (547 samples, 0.07%)</title><rect x="47.9410%" y="149" width="0.0746%" height="15" fill="rgb(206,124,46)" fg:x="351541" fg:w="547"/><text x="48.1910%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (327 samples, 0.04%)</title><rect x="47.9710%" y="133" width="0.0446%" height="15" fill="rgb(249,21,11)" fg:x="351761" fg:w="327"/><text x="48.2210%" y="143.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (97 samples, 0.01%)</title><rect x="48.0023%" y="117" width="0.0132%" height="15" fill="rgb(222,201,40)" fg:x="351991" fg:w="97"/><text x="48.2523%" y="127.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (89 samples, 0.01%)</title><rect x="48.0156%" y="165" width="0.0121%" height="15" fill="rgb(235,61,29)" fg:x="352088" fg:w="89"/><text x="48.2656%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (49,013 samples, 6.68%)</title><rect x="49.2510%" y="149" width="6.6841%" height="15" fill="rgb(219,207,3)" fg:x="361147" fg:w="49013"/><text x="49.5010%" y="159.50">anoncreds..</text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (17,171 samples, 2.34%)</title><rect x="55.9351%" y="149" width="2.3417%" height="15" fill="rgb(222,56,46)" fg:x="410160" fg:w="17171"/><text x="56.1851%" y="159.50">a..</text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (93,056 samples, 12.69%)</title><rect x="48.0277%" y="165" width="12.6904%" height="15" fill="rgb(239,76,54)" fg:x="352177" fg:w="93056"/><text x="48.2777%" y="175.50">anoncreds`&lt;core::it..</text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (17,902 samples, 2.44%)</title><rect x="58.2767%" y="149" width="2.4414%" height="15" fill="rgb(231,124,27)" fg:x="427331" fg:w="17902"/><text x="58.5267%" y="159.50">an..</text></g><g><title>anoncreds`DYLD-STUB$$memcpy (261 samples, 0.04%)</title><rect x="60.7212%" y="165" width="0.0356%" height="15" fill="rgb(249,195,6)" fg:x="445256" fg:w="261"/><text x="60.9712%" y="175.50"></text></g><g><title>anoncreds`alloc::alloc::Global::alloc_impl (186 samples, 0.03%)</title><rect x="60.9243%" y="101" width="0.0254%" height="15" fill="rgb(237,174,47)" fg:x="446745" fg:w="186"/><text x="61.1743%" y="111.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (454 samples, 0.06%)</title><rect x="60.9199%" y="117" width="0.0619%" height="15" fill="rgb(206,201,31)" fg:x="446713" fg:w="454"/><text x="61.1699%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (76 samples, 0.01%)</title><rect x="60.9715%" y="101" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="447091" fg:w="76"/><text x="61.2215%" y="111.50"></text></g><g><title>anoncreds`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,019 samples, 0.28%)</title><rect x="60.7591%" y="149" width="0.2753%" height="15" fill="rgb(248,177,22)" fg:x="445534" fg:w="2019"/><text x="61.0091%" y="159.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,315 samples, 0.18%)</title><rect x="60.8551%" y="133" width="0.1793%" height="15" fill="rgb(215,211,37)" fg:x="446238" fg:w="1315"/><text x="61.1051%" y="143.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (321 samples, 0.04%)</title><rect x="60.9907%" y="117" width="0.0438%" height="15" fill="rgb(241,128,51)" fg:x="447232" fg:w="321"/><text x="61.2407%" y="127.50"></text></g><g><title>anoncreds`alloc::slice::_&lt;impl [T]&gt;::to_vec (2,109 samples, 0.29%)</title><rect x="60.7568%" y="165" width="0.2876%" height="15" fill="rgb(227,165,31)" fg:x="445517" fg:w="2109"/><text x="61.0068%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (288 samples, 0.04%)</title><rect x="61.0821%" y="149" width="0.0393%" height="15" fill="rgb(228,167,24)" fg:x="447902" fg:w="288"/><text x="61.3321%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,954 samples, 0.27%)</title><rect x="61.6678%" y="133" width="0.2665%" height="15" fill="rgb(228,143,12)" fg:x="452197" fg:w="1954"/><text x="61.9178%" y="143.50"></text></g><g><title>anoncreds`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (400 samples, 0.05%)</title><rect x="61.9343%" y="133" width="0.0545%" height="15" fill="rgb(249,149,8)" fg:x="454151" fg:w="400"/><text x="62.1843%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (214 samples, 0.03%)</title><rect x="61.9914%" y="117" width="0.0292%" height="15" fill="rgb(243,35,44)" fg:x="454570" fg:w="214"/><text x="62.2414%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (82 samples, 0.01%)</title><rect x="62.0664%" y="69" width="0.0112%" height="15" fill="rgb(246,89,9)" fg:x="455120" fg:w="82"/><text x="62.3164%" y="79.50"></text></g><g><title>anoncreds`alloc::alloc::Global::alloc_impl (115 samples, 0.02%)</title><rect x="62.1017%" y="37" width="0.0157%" height="15" fill="rgb(233,213,13)" fg:x="455379" fg:w="115"/><text x="62.3517%" y="47.50"></text></g><g><title>anoncreds`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (129 samples, 0.02%)</title><rect x="62.1230%" y="37" width="0.0176%" height="15" fill="rgb(233,141,41)" fg:x="455535" fg:w="129"/><text x="62.3730%" y="47.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (464 samples, 0.06%)</title><rect x="62.0975%" y="53" width="0.0633%" height="15" fill="rgb(239,167,4)" fg:x="455348" fg:w="464"/><text x="62.3475%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (82 samples, 0.01%)</title><rect x="62.1496%" y="37" width="0.0112%" height="15" fill="rgb(209,217,16)" fg:x="455730" fg:w="82"/><text x="62.3996%" y="47.50"></text></g><g><title>anoncreds`alloc::raw_vec::finish_grow (827 samples, 0.11%)</title><rect x="62.0776%" y="69" width="0.1128%" height="15" fill="rgb(219,88,35)" fg:x="455202" fg:w="827"/><text x="62.3276%" y="79.50"></text></g><g><title>anoncreds`core::result::Result&lt;T,E&gt;::map_err (166 samples, 0.02%)</title><rect x="62.1677%" y="53" width="0.0226%" height="15" fill="rgb(220,193,23)" fg:x="455863" fg:w="166"/><text x="62.4177%" y="63.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (331 samples, 0.05%)</title><rect x="62.1904%" y="69" width="0.0451%" height="15" fill="rgb(230,90,52)" fg:x="456029" fg:w="331"/><text x="62.4404%" y="79.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (98 samples, 0.01%)</title><rect x="62.2659%" y="53" width="0.0134%" height="15" fill="rgb(252,106,19)" fg:x="456583" fg:w="98"/><text x="62.5159%" y="63.50"></text></g><g><title>anoncreds`core::cmp::max_by (446 samples, 0.06%)</title><rect x="62.2355%" y="69" width="0.0608%" height="15" fill="rgb(206,74,20)" fg:x="456360" fg:w="446"/><text x="62.4855%" y="79.50"></text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (125 samples, 0.02%)</title><rect x="62.2793%" y="53" width="0.0170%" height="15" fill="rgb(230,138,44)" fg:x="456681" fg:w="125"/><text x="62.5293%" y="63.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,942 samples, 0.26%)</title><rect x="62.0316%" y="85" width="0.2648%" height="15" fill="rgb(235,182,43)" fg:x="454865" fg:w="1942"/><text x="62.2816%" y="95.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (341 samples, 0.05%)</title><rect x="62.2965%" y="85" width="0.0465%" height="15" fill="rgb(242,16,51)" fg:x="456807" fg:w="341"/><text x="62.5465%" y="95.50"></text></g><g><title>anoncreds`alloc::raw_vec::handle_reserve (90 samples, 0.01%)</title><rect x="62.3446%" y="85" width="0.0123%" height="15" fill="rgb(248,9,4)" fg:x="457160" fg:w="90"/><text x="62.5946%" y="95.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,708 samples, 0.37%)</title><rect x="62.0280%" y="101" width="0.3693%" height="15" fill="rgb(210,31,22)" fg:x="454838" fg:w="2708"/><text x="62.2780%" y="111.50"></text></g><g><title>anoncreds`core::num::_&lt;impl usize&gt;::checked_add (296 samples, 0.04%)</title><rect x="62.3569%" y="85" width="0.0404%" height="15" fill="rgb(239,54,39)" fg:x="457250" fg:w="296"/><text x="62.6069%" y="95.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::reserve (2,996 samples, 0.41%)</title><rect x="61.9888%" y="133" width="0.4086%" height="15" fill="rgb(230,99,41)" fg:x="454551" fg:w="2996"/><text x="62.2388%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,763 samples, 0.38%)</title><rect x="62.0206%" y="117" width="0.3768%" height="15" fill="rgb(253,106,12)" fg:x="454784" fg:w="2763"/><text x="62.2706%" y="127.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (638 samples, 0.09%)</title><rect x="62.3974%" y="133" width="0.0870%" height="15" fill="rgb(213,46,41)" fg:x="457547" fg:w="638"/><text x="62.6474%" y="143.50"></text></g><g><title>anoncreds`core::mem::replace (2,216 samples, 0.30%)</title><rect x="62.4844%" y="133" width="0.3022%" height="15" fill="rgb(215,133,35)" fg:x="458185" fg:w="2216"/><text x="62.7344%" y="143.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::resize (12,793 samples, 1.74%)</title><rect x="61.0459%" y="165" width="1.7446%" height="15" fill="rgb(213,28,5)" fg:x="447637" fg:w="12793"/><text x="61.2959%" y="175.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::extend_with (12,240 samples, 1.67%)</title><rect x="61.1213%" y="149" width="1.6692%" height="15" fill="rgb(215,77,49)" fg:x="448190" fg:w="12240"/><text x="61.3713%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,004 samples, 0.14%)</title><rect x="62.8337%" y="149" width="0.1369%" height="15" fill="rgb(248,100,22)" fg:x="460746" fg:w="1004"/><text x="63.0837%" y="159.50"></text></g><g><title>anoncreds`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (253 samples, 0.03%)</title><rect x="62.9706%" y="149" width="0.0345%" height="15" fill="rgb(208,67,9)" fg:x="461750" fg:w="253"/><text x="63.2206%" y="159.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (296 samples, 0.04%)</title><rect x="63.0051%" y="149" width="0.0404%" height="15" fill="rgb(219,133,21)" fg:x="462003" fg:w="296"/><text x="63.2551%" y="159.50"></text></g><g><title>anoncreds`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5,771 samples, 0.79%)</title><rect x="62.7933%" y="165" width="0.7870%" height="15" fill="rgb(246,46,29)" fg:x="460450" fg:w="5771"/><text x="63.0433%" y="175.50"></text></g><g><title>anoncreds`core::mem::replace (3,922 samples, 0.53%)</title><rect x="63.0454%" y="149" width="0.5349%" height="15" fill="rgb(246,185,52)" fg:x="462299" fg:w="3922"/><text x="63.2954%" y="159.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (2,262 samples, 0.31%)</title><rect x="64.9504%" y="101" width="0.3085%" height="15" fill="rgb(252,136,11)" fg:x="476268" fg:w="2262"/><text x="65.2004%" y="111.50"></text></g><g><title>anoncreds`core::cmp::min_by (10,063 samples, 1.37%)</title><rect x="64.3417%" y="117" width="1.3723%" height="15" fill="rgb(219,138,53)" fg:x="471804" fg:w="10063"/><text x="64.5917%" y="127.50"></text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (3,337 samples, 0.46%)</title><rect x="65.2589%" y="101" width="0.4551%" height="15" fill="rgb(211,51,23)" fg:x="478530" fg:w="3337"/><text x="65.5089%" y="111.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7,298 samples, 1.00%)</title><rect x="65.9923%" y="101" width="0.9953%" height="15" fill="rgb(247,221,28)" fg:x="483908" fg:w="7298"/><text x="66.2423%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (3,881 samples, 0.53%)</title><rect x="66.4583%" y="85" width="0.5293%" height="15" fill="rgb(251,222,45)" fg:x="487325" fg:w="3881"/><text x="66.7083%" y="95.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (9,138 samples, 1.25%)</title><rect x="66.9876%" y="101" width="1.2462%" height="15" fill="rgb(217,162,53)" fg:x="491206" fg:w="9138"/><text x="67.2376%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (2,575 samples, 0.35%)</title><rect x="67.8826%" y="85" width="0.3512%" height="15" fill="rgb(229,93,14)" fg:x="497769" fg:w="2575"/><text x="68.1326%" y="95.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (18,478 samples, 2.52%)</title><rect x="65.7140%" y="117" width="2.5199%" height="15" fill="rgb(209,67,49)" fg:x="481867" fg:w="18478"/><text x="65.9640%" y="127.50">an..</text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (30,854 samples, 4.21%)</title><rect x="64.0268%" y="133" width="4.2077%" height="15" fill="rgb(213,87,29)" fg:x="469495" fg:w="30854"/><text x="64.2768%" y="143.50">anonc..</text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (34,068 samples, 4.65%)</title><rect x="63.5888%" y="165" width="4.6460%" height="15" fill="rgb(205,151,52)" fg:x="466283" fg:w="34068"/><text x="63.8388%" y="175.50">anonc..</text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (31,639 samples, 4.31%)</title><rect x="63.9200%" y="149" width="4.3147%" height="15" fill="rgb(253,215,39)" fg:x="468712" fg:w="31639"/><text x="64.1700%" y="159.50">anonc..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (122 samples, 0.02%)</title><rect x="68.2799%" y="101" width="0.0166%" height="15" fill="rgb(221,220,41)" fg:x="500682" fg:w="122"/><text x="68.5299%" y="111.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (281 samples, 0.04%)</title><rect x="68.2626%" y="117" width="0.0383%" height="15" fill="rgb(218,133,21)" fg:x="500555" fg:w="281"/><text x="68.5126%" y="127.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (271 samples, 0.04%)</title><rect x="68.3217%" y="101" width="0.0370%" height="15" fill="rgb(221,193,43)" fg:x="500989" fg:w="271"/><text x="68.5717%" y="111.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (470 samples, 0.06%)</title><rect x="68.3029%" y="117" width="0.0641%" height="15" fill="rgb(240,128,52)" fg:x="500851" fg:w="470"/><text x="68.5529%" y="127.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1,053 samples, 0.14%)</title><rect x="68.2347%" y="165" width="0.1436%" height="15" fill="rgb(253,114,12)" fg:x="500351" fg:w="1053"/><text x="68.4847%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1,024 samples, 0.14%)</title><rect x="68.2387%" y="149" width="0.1396%" height="15" fill="rgb(215,223,47)" fg:x="500380" fg:w="1024"/><text x="68.4887%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,002 samples, 0.14%)</title><rect x="68.2417%" y="133" width="0.1366%" height="15" fill="rgb(248,225,23)" fg:x="500402" fg:w="1002"/><text x="68.4917%" y="143.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::iter (578 samples, 0.08%)</title><rect x="68.3783%" y="165" width="0.0788%" height="15" fill="rgb(250,108,0)" fg:x="501404" fg:w="578"/><text x="68.6283%" y="175.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::iter_mut (566 samples, 0.08%)</title><rect x="68.4572%" y="165" width="0.0772%" height="15" fill="rgb(228,208,7)" fg:x="501982" fg:w="566"/><text x="68.7072%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (8,997 samples, 1.23%)</title><rect x="68.5409%" y="165" width="1.2270%" height="15" fill="rgb(244,45,10)" fg:x="502596" fg:w="8997"/><text x="68.7909%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (9,945 samples, 1.36%)</title><rect x="69.7679%" y="165" width="1.3562%" height="15" fill="rgb(207,125,25)" fg:x="511593" fg:w="9945"/><text x="70.0179%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (443,482 samples, 60.48%)</title><rect x="11.0078%" y="181" width="60.4793%" height="15" fill="rgb(210,195,18)" fg:x="80718" fg:w="443482"/><text x="11.2578%" y="191.50">anoncreds`num_bigint::biguint::monty::montgomery</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2,662 samples, 0.36%)</title><rect x="71.1241%" y="165" width="0.3630%" height="15" fill="rgb(249,80,12)" fg:x="521538" fg:w="2662"/><text x="71.3741%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (450,576 samples, 61.45%)</title><rect x="10.0419%" y="229" width="61.4467%" height="15" fill="rgb(221,65,9)" fg:x="73635" fg:w="450576"/><text x="10.2919%" y="239.50">anoncreds`num_bigint::biguint::BigUint::modpow</text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (450,575 samples, 61.45%)</title><rect x="10.0420%" y="213" width="61.4466%" height="15" fill="rgb(235,49,36)" fg:x="73636" fg:w="450575"/><text x="10.2920%" y="223.50">anoncreds`num_bigint::biguint::power::modpow</text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (450,555 samples, 61.44%)</title><rect x="10.0447%" y="197" width="61.4439%" height="15" fill="rgb(225,32,20)" fg:x="73656" fg:w="450555"/><text x="10.2947%" y="207.50">anoncreds`num_bigint::biguint::monty::monty_modpow</text></g><g><title>anoncreds`glass_pumpkin::common::fermat (451,067 samples, 61.51%)</title><rect x="9.9764%" y="245" width="61.5137%" height="15" fill="rgb(215,141,46)" fg:x="73155" fg:w="451067"/><text x="10.2264%" y="255.50">anoncreds`glass_pumpkin::common::fermat</text></g><g><title>anoncreds`&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (98 samples, 0.01%)</title><rect x="71.4938%" y="69" width="0.0134%" height="15" fill="rgb(250,160,47)" fg:x="524249" fg:w="98"/><text x="71.7438%" y="79.50"></text></g><g><title>anoncreds`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (128 samples, 0.02%)</title><rect x="71.4907%" y="101" width="0.0175%" height="15" fill="rgb(216,222,40)" fg:x="524226" fg:w="128"/><text x="71.7407%" y="111.50"></text></g><g><title>anoncreds`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (128 samples, 0.02%)</title><rect x="71.4907%" y="85" width="0.0175%" height="15" fill="rgb(234,217,39)" fg:x="524226" fg:w="128"/><text x="71.7407%" y="95.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint (133 samples, 0.02%)</title><rect x="71.4901%" y="197" width="0.0181%" height="15" fill="rgb(207,178,40)" fg:x="524222" fg:w="133"/><text x="71.7401%" y="207.50"></text></g><g><title>anoncreds`num_bigint::bigrand::gen_bits (133 samples, 0.02%)</title><rect x="71.4901%" y="181" width="0.0181%" height="15" fill="rgb(221,136,13)" fg:x="524222" fg:w="133"/><text x="71.7401%" y="191.50"></text></g><g><title>anoncreds`rand::Rng::fill (133 samples, 0.02%)</title><rect x="71.4901%" y="165" width="0.0181%" height="15" fill="rgb(249,199,10)" fg:x="524222" fg:w="133"/><text x="71.7401%" y="175.50"></text></g><g><title>anoncreds`&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::fill_bytes (130 samples, 0.02%)</title><rect x="71.4905%" y="149" width="0.0177%" height="15" fill="rgb(249,222,13)" fg:x="524225" fg:w="130"/><text x="71.7405%" y="159.50"></text></g><g><title>anoncreds`&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::fill_bytes (130 samples, 0.02%)</title><rect x="71.4905%" y="133" width="0.0177%" height="15" fill="rgb(244,185,38)" fg:x="524225" fg:w="130"/><text x="71.7405%" y="143.50"></text></g><g><title>anoncreds`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::fill_bytes (130 samples, 0.02%)</title><rect x="71.4905%" y="117" width="0.0177%" height="15" fill="rgb(236,202,9)" fg:x="524225" fg:w="130"/><text x="71.7405%" y="127.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint_below (135 samples, 0.02%)</title><rect x="71.4901%" y="213" width="0.0184%" height="15" fill="rgb(250,229,37)" fg:x="524222" fg:w="135"/><text x="71.7401%" y="223.50"></text></g><g><title>anoncreds`&lt;R as num_bigint::bigrand::RandBigInt&gt;::gen_biguint_range (140 samples, 0.02%)</title><rect x="71.4901%" y="229" width="0.0191%" height="15" fill="rgb(206,174,23)" fg:x="524222" fg:w="140"/><text x="71.7401%" y="239.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,458 samples, 0.20%)</title><rect x="71.5201%" y="181" width="0.1988%" height="15" fill="rgb(211,33,43)" fg:x="524442" fg:w="1458"/><text x="71.7701%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (347 samples, 0.05%)</title><rect x="71.7225%" y="181" width="0.0473%" height="15" fill="rgb(245,58,50)" fg:x="525926" fg:w="347"/><text x="71.9725%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.02%)</title><rect x="71.7794%" y="165" width="0.0151%" height="15" fill="rgb(244,68,36)" fg:x="526343" fg:w="111"/><text x="72.0294%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.01%)</title><rect x="71.7997%" y="117" width="0.0108%" height="15" fill="rgb(232,229,15)" fg:x="526492" fg:w="79"/><text x="72.0497%" y="127.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (108 samples, 0.01%)</title><rect x="71.8253%" y="101" width="0.0147%" height="15" fill="rgb(254,30,23)" fg:x="526680" fg:w="108"/><text x="72.0753%" y="111.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (237 samples, 0.03%)</title><rect x="71.8109%" y="117" width="0.0323%" height="15" fill="rgb(235,160,14)" fg:x="526574" fg:w="237"/><text x="72.0609%" y="127.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;num_bigint::biguint::BigUint&gt; (505 samples, 0.07%)</title><rect x="71.7785%" y="181" width="0.0689%" height="15" fill="rgb(212,155,44)" fg:x="526337" fg:w="505"/><text x="72.0285%" y="191.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (388 samples, 0.05%)</title><rect x="71.7945%" y="165" width="0.0529%" height="15" fill="rgb(226,2,50)" fg:x="526454" fg:w="388"/><text x="72.0445%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (378 samples, 0.05%)</title><rect x="71.7959%" y="149" width="0.0515%" height="15" fill="rgb(234,177,6)" fg:x="526464" fg:w="378"/><text x="72.0459%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (371 samples, 0.05%)</title><rect x="71.7968%" y="133" width="0.0506%" height="15" fill="rgb(217,24,9)" fg:x="526471" fg:w="371"/><text x="72.0468%" y="143.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_core (74 samples, 0.01%)</title><rect x="71.8481%" y="117" width="0.0101%" height="15" fill="rgb(220,13,46)" fg:x="526847" fg:w="74"/><text x="72.0981%" y="127.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as num_integer::Integer&gt;::div_rem (82 samples, 0.01%)</title><rect x="71.8477%" y="149" width="0.0112%" height="15" fill="rgb(239,221,27)" fg:x="526844" fg:w="82"/><text x="72.0977%" y="159.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_ref (82 samples, 0.01%)</title><rect x="71.8477%" y="133" width="0.0112%" height="15" fill="rgb(222,198,25)" fg:x="526844" fg:w="82"/><text x="72.0977%" y="143.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for num_bigint::biguint::BigUint&gt;::rem (83 samples, 0.01%)</title><rect x="71.8477%" y="181" width="0.0113%" height="15" fill="rgb(211,99,13)" fg:x="526844" fg:w="83"/><text x="72.0977%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (83 samples, 0.01%)</title><rect x="71.8477%" y="165" width="0.0113%" height="15" fill="rgb(232,111,31)" fg:x="526844" fg:w="83"/><text x="72.0977%" y="175.50"></text></g><g><title>anoncreds`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (443 samples, 0.06%)</title><rect x="83.0778%" y="165" width="0.0604%" height="15" fill="rgb(245,82,37)" fg:x="609192" fg:w="443"/><text x="83.3278%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,141 samples, 0.43%)</title><rect x="83.1388%" y="165" width="0.4283%" height="15" fill="rgb(227,149,46)" fg:x="609639" fg:w="3141"/><text x="83.3888%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5,224 samples, 0.71%)</title><rect x="83.5671%" y="165" width="0.7124%" height="15" fill="rgb(218,36,50)" fg:x="612780" fg:w="5224"/><text x="83.8171%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.01%)</title><rect x="84.2795%" y="165" width="0.0128%" height="15" fill="rgb(226,80,48)" fg:x="618004" fg:w="94"/><text x="84.5295%" y="175.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (98 samples, 0.01%)</title><rect x="84.4436%" y="149" width="0.0134%" height="15" fill="rgb(238,224,15)" fg:x="619207" fg:w="98"/><text x="84.6936%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (99 samples, 0.01%)</title><rect x="84.4569%" y="149" width="0.0135%" height="15" fill="rgb(241,136,10)" fg:x="619305" fg:w="99"/><text x="84.7069%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,697 samples, 0.23%)</title><rect x="84.2923%" y="165" width="0.2314%" height="15" fill="rgb(208,32,45)" fg:x="618098" fg:w="1697"/><text x="84.5423%" y="175.50"></text></g><g><title>anoncreds`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (376 samples, 0.05%)</title><rect x="84.4725%" y="149" width="0.0513%" height="15" fill="rgb(207,135,9)" fg:x="619419" fg:w="376"/><text x="84.7225%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3,457 samples, 0.47%)</title><rect x="84.6610%" y="149" width="0.4714%" height="15" fill="rgb(206,86,44)" fg:x="620801" fg:w="3457"/><text x="84.9110%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (623 samples, 0.08%)</title><rect x="85.1324%" y="149" width="0.0850%" height="15" fill="rgb(245,177,15)" fg:x="624258" fg:w="623"/><text x="85.3824%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5,269 samples, 0.72%)</title><rect x="84.5238%" y="165" width="0.7186%" height="15" fill="rgb(206,64,50)" fg:x="619795" fg:w="5269"/><text x="84.7738%" y="175.50"></text></g><g><title>anoncreds`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (183 samples, 0.02%)</title><rect x="85.2174%" y="149" width="0.0250%" height="15" fill="rgb(234,36,40)" fg:x="624881" fg:w="183"/><text x="85.4674%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (226 samples, 0.03%)</title><rect x="85.2423%" y="165" width="0.0308%" height="15" fill="rgb(213,64,8)" fg:x="625064" fg:w="226"/><text x="85.4923%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (185 samples, 0.03%)</title><rect x="85.2479%" y="149" width="0.0252%" height="15" fill="rgb(210,75,36)" fg:x="625105" fg:w="185"/><text x="85.4979%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.01%)</title><rect x="85.2598%" y="133" width="0.0134%" height="15" fill="rgb(229,88,21)" fg:x="625192" fg:w="98"/><text x="85.5098%" y="143.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (17,902 samples, 2.44%)</title><rect x="85.7189%" y="149" width="2.4414%" height="15" fill="rgb(252,204,47)" fg:x="628559" fg:w="17902"/><text x="85.9689%" y="159.50">an..</text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (6,333 samples, 0.86%)</title><rect x="88.1603%" y="149" width="0.8637%" height="15" fill="rgb(208,77,27)" fg:x="646461" fg:w="6333"/><text x="88.4103%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,070 samples, 4.65%)</title><rect x="85.2772%" y="165" width="4.6463%" height="15" fill="rgb(221,76,26)" fg:x="625320" fg:w="34070"/><text x="85.5272%" y="175.50">anonc..</text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (6,596 samples, 0.90%)</title><rect x="89.0240%" y="149" width="0.8995%" height="15" fill="rgb(225,139,18)" fg:x="652794" fg:w="6596"/><text x="89.2740%" y="159.50"></text></g><g><title>anoncreds`DYLD-STUB$$memcpy (108 samples, 0.01%)</title><rect x="89.9259%" y="165" width="0.0147%" height="15" fill="rgb(230,137,11)" fg:x="659408" fg:w="108"/><text x="90.1759%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (158 samples, 0.02%)</title><rect x="89.9982%" y="117" width="0.0215%" height="15" fill="rgb(212,28,1)" fg:x="659938" fg:w="158"/><text x="90.2482%" y="127.50"></text></g><g><title>anoncreds`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (727 samples, 0.10%)</title><rect x="89.9419%" y="149" width="0.0991%" height="15" fill="rgb(248,164,17)" fg:x="659525" fg:w="727"/><text x="90.1919%" y="159.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (494 samples, 0.07%)</title><rect x="89.9737%" y="133" width="0.0674%" height="15" fill="rgb(222,171,42)" fg:x="659758" fg:w="494"/><text x="90.2237%" y="143.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (128 samples, 0.02%)</title><rect x="90.0236%" y="117" width="0.0175%" height="15" fill="rgb(243,84,45)" fg:x="660124" fg:w="128"/><text x="90.2736%" y="127.50"></text></g><g><title>anoncreds`alloc::slice::_&lt;impl [T]&gt;::to_vec (767 samples, 0.10%)</title><rect x="89.9407%" y="165" width="0.1046%" height="15" fill="rgb(252,49,23)" fg:x="659516" fg:w="767"/><text x="90.1907%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (111 samples, 0.02%)</title><rect x="90.0586%" y="149" width="0.0151%" height="15" fill="rgb(215,19,7)" fg:x="660381" fg:w="111"/><text x="90.3086%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (713 samples, 0.10%)</title><rect x="90.2658%" y="133" width="0.0972%" height="15" fill="rgb(238,81,41)" fg:x="661900" fg:w="713"/><text x="90.5158%" y="143.50"></text></g><g><title>anoncreds`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (123 samples, 0.02%)</title><rect x="90.3630%" y="133" width="0.0168%" height="15" fill="rgb(210,199,37)" fg:x="662613" fg:w="123"/><text x="90.6130%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (81 samples, 0.01%)</title><rect x="90.3816%" y="117" width="0.0110%" height="15" fill="rgb(244,192,49)" fg:x="662749" fg:w="81"/><text x="90.6316%" y="127.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171 samples, 0.02%)</title><rect x="90.4167%" y="53" width="0.0233%" height="15" fill="rgb(226,211,11)" fg:x="663007" fg:w="171"/><text x="90.6667%" y="63.50"></text></g><g><title>anoncreds`alloc::raw_vec::finish_grow (310 samples, 0.04%)</title><rect x="90.4106%" y="69" width="0.0423%" height="15" fill="rgb(236,162,54)" fg:x="662962" fg:w="310"/><text x="90.6606%" y="79.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (108 samples, 0.01%)</title><rect x="90.4529%" y="69" width="0.0147%" height="15" fill="rgb(220,229,9)" fg:x="663272" fg:w="108"/><text x="90.7029%" y="79.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (716 samples, 0.10%)</title><rect x="90.3964%" y="85" width="0.0976%" height="15" fill="rgb(250,87,22)" fg:x="662858" fg:w="716"/><text x="90.6464%" y="95.50"></text></g><g><title>anoncreds`core::cmp::max_by (194 samples, 0.03%)</title><rect x="90.4676%" y="69" width="0.0265%" height="15" fill="rgb(239,43,17)" fg:x="663380" fg:w="194"/><text x="90.7176%" y="79.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (118 samples, 0.02%)</title><rect x="90.4941%" y="85" width="0.0161%" height="15" fill="rgb(231,177,25)" fg:x="663574" fg:w="118"/><text x="90.7441%" y="95.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::reserve (1,105 samples, 0.15%)</title><rect x="90.3798%" y="133" width="0.1507%" height="15" fill="rgb(219,179,1)" fg:x="662736" fg:w="1105"/><text x="90.6298%" y="143.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,011 samples, 0.14%)</title><rect x="90.3926%" y="117" width="0.1379%" height="15" fill="rgb(238,219,53)" fg:x="662830" fg:w="1011"/><text x="90.6426%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (991 samples, 0.14%)</title><rect x="90.3953%" y="101" width="0.1351%" height="15" fill="rgb(232,167,36)" fg:x="662850" fg:w="991"/><text x="90.6453%" y="111.50"></text></g><g><title>anoncreds`core::num::_&lt;impl usize&gt;::checked_add (96 samples, 0.01%)</title><rect x="90.5174%" y="85" width="0.0131%" height="15" fill="rgb(244,19,51)" fg:x="663745" fg:w="96"/><text x="90.7674%" y="95.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (208 samples, 0.03%)</title><rect x="90.5305%" y="133" width="0.0284%" height="15" fill="rgb(224,6,22)" fg:x="663841" fg:w="208"/><text x="90.7805%" y="143.50"></text></g><g><title>anoncreds`core::mem::replace (752 samples, 0.10%)</title><rect x="90.5588%" y="133" width="0.1026%" height="15" fill="rgb(224,145,5)" fg:x="664049" fg:w="752"/><text x="90.8088%" y="143.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::resize (4,528 samples, 0.62%)</title><rect x="90.0457%" y="165" width="0.6175%" height="15" fill="rgb(234,130,49)" fg:x="660286" fg:w="4528"/><text x="90.2957%" y="175.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::extend_with (4,322 samples, 0.59%)</title><rect x="90.0738%" y="149" width="0.5894%" height="15" fill="rgb(254,6,2)" fg:x="660492" fg:w="4322"/><text x="90.3238%" y="159.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (356 samples, 0.05%)</title><rect x="90.6776%" y="149" width="0.0485%" height="15" fill="rgb(208,96,46)" fg:x="664920" fg:w="356"/><text x="90.9276%" y="159.50"></text></g><g><title>anoncreds`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (97 samples, 0.01%)</title><rect x="90.7262%" y="149" width="0.0132%" height="15" fill="rgb(239,3,39)" fg:x="665276" fg:w="97"/><text x="90.9762%" y="159.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (86 samples, 0.01%)</title><rect x="90.7394%" y="149" width="0.0117%" height="15" fill="rgb(233,210,1)" fg:x="665373" fg:w="86"/><text x="90.9894%" y="159.50"></text></g><g><title>anoncreds`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,099 samples, 0.29%)</title><rect x="90.6644%" y="165" width="0.2862%" height="15" fill="rgb(244,137,37)" fg:x="664823" fg:w="2099"/><text x="90.9144%" y="175.50"></text></g><g><title>anoncreds`core::mem::replace (1,463 samples, 0.20%)</title><rect x="90.7511%" y="149" width="0.1995%" height="15" fill="rgb(240,136,2)" fg:x="665459" fg:w="1463"/><text x="91.0011%" y="159.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (835 samples, 0.11%)</title><rect x="91.4525%" y="101" width="0.1139%" height="15" fill="rgb(239,18,37)" fg:x="670602" fg:w="835"/><text x="91.7025%" y="111.50"></text></g><g><title>anoncreds`core::cmp::min_by (3,657 samples, 0.50%)</title><rect x="91.2355%" y="117" width="0.4987%" height="15" fill="rgb(218,185,22)" fg:x="669011" fg:w="3657"/><text x="91.4855%" y="127.50"></text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (1,231 samples, 0.17%)</title><rect x="91.5664%" y="101" width="0.1679%" height="15" fill="rgb(225,218,4)" fg:x="671437" fg:w="1231"/><text x="91.8164%" y="111.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2,723 samples, 0.37%)</title><rect x="91.8343%" y="101" width="0.3713%" height="15" fill="rgb(230,182,32)" fg:x="673402" fg:w="2723"/><text x="92.0843%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (1,439 samples, 0.20%)</title><rect x="92.0095%" y="85" width="0.1962%" height="15" fill="rgb(242,56,43)" fg:x="674686" fg:w="1439"/><text x="92.2595%" y="95.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (12,530 samples, 1.71%)</title><rect x="90.9527%" y="165" width="1.7088%" height="15" fill="rgb(233,99,24)" fg:x="666937" fg:w="12530"/><text x="91.2027%" y="175.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (11,643 samples, 1.59%)</title><rect x="91.0737%" y="149" width="1.5878%" height="15" fill="rgb(234,209,42)" fg:x="667824" fg:w="11643"/><text x="91.3237%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (11,336 samples, 1.55%)</title><rect x="91.1155%" y="133" width="1.5459%" height="15" fill="rgb(227,7,12)" fg:x="668131" fg:w="11336"/><text x="91.3655%" y="143.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (6,799 samples, 0.93%)</title><rect x="91.7343%" y="117" width="0.9272%" height="15" fill="rgb(245,203,43)" fg:x="672668" fg:w="6799"/><text x="91.9843%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3,342 samples, 0.46%)</title><rect x="92.2057%" y="101" width="0.4558%" height="15" fill="rgb(238,205,33)" fg:x="676125" fg:w="3342"/><text x="92.4557%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (969 samples, 0.13%)</title><rect x="92.5293%" y="85" width="0.1321%" height="15" fill="rgb(231,56,7)" fg:x="678498" fg:w="969"/><text x="92.7793%" y="95.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.01%)</title><rect x="92.6748%" y="117" width="0.0104%" height="15" fill="rgb(244,186,29)" fg:x="679565" fg:w="76"/><text x="92.9248%" y="127.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (97 samples, 0.01%)</title><rect x="92.6924%" y="101" width="0.0132%" height="15" fill="rgb(234,111,31)" fg:x="679694" fg:w="97"/><text x="92.9424%" y="111.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (161 samples, 0.02%)</title><rect x="92.6857%" y="117" width="0.0220%" height="15" fill="rgb(241,149,10)" fg:x="679645" fg:w="161"/><text x="92.9357%" y="127.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (376 samples, 0.05%)</title><rect x="92.6615%" y="165" width="0.0513%" height="15" fill="rgb(249,206,44)" fg:x="679467" fg:w="376"/><text x="92.9115%" y="175.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (365 samples, 0.05%)</title><rect x="92.6630%" y="149" width="0.0498%" height="15" fill="rgb(251,153,30)" fg:x="679478" fg:w="365"/><text x="92.9130%" y="159.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 0.05%)</title><rect x="92.6642%" y="133" width="0.0485%" height="15" fill="rgb(239,152,38)" fg:x="679487" fg:w="356"/><text x="92.9142%" y="143.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::iter (191 samples, 0.03%)</title><rect x="92.7127%" y="165" width="0.0260%" height="15" fill="rgb(249,139,47)" fg:x="679843" fg:w="191"/><text x="92.9627%" y="175.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::iter_mut (229 samples, 0.03%)</title><rect x="92.7388%" y="165" width="0.0312%" height="15" fill="rgb(244,64,35)" fg:x="680034" fg:w="229"/><text x="92.9888%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (3,257 samples, 0.44%)</title><rect x="92.7715%" y="165" width="0.4442%" height="15" fill="rgb(216,46,15)" fg:x="680274" fg:w="3257"/><text x="93.0215%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (3,587 samples, 0.49%)</title><rect x="93.2157%" y="165" width="0.4892%" height="15" fill="rgb(250,74,19)" fg:x="683531" fg:w="3587"/><text x="93.4657%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::monty::montgomery (161,168 samples, 21.98%)</title><rect x="71.8590%" y="181" width="21.9791%" height="15" fill="rgb(249,42,33)" fg:x="526927" fg:w="161168"/><text x="72.1090%" y="191.50">anoncreds`num_bigint::biguint::mont..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (977 samples, 0.13%)</title><rect x="93.7049%" y="165" width="0.1332%" height="15" fill="rgb(242,149,17)" fg:x="687118" fg:w="977"/><text x="93.9549%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::BigUint::modpow (163,740 samples, 22.33%)</title><rect x="71.5095%" y="229" width="22.3298%" height="15" fill="rgb(244,29,21)" fg:x="524364" fg:w="163740"/><text x="71.7595%" y="239.50">anoncreds`num_bigint::biguint::BigU..</text></g><g><title>anoncreds`num_bigint::biguint::power::modpow (163,740 samples, 22.33%)</title><rect x="71.5095%" y="213" width="22.3298%" height="15" fill="rgb(220,130,37)" fg:x="524364" fg:w="163740"/><text x="71.7595%" y="223.50">anoncreds`num_bigint::biguint::powe..</text></g><g><title>anoncreds`num_bigint::biguint::monty::monty_modpow (163,727 samples, 22.33%)</title><rect x="71.5113%" y="197" width="22.3281%" height="15" fill="rgb(211,67,2)" fg:x="524377" fg:w="163727"/><text x="71.7613%" y="207.50">anoncreds`num_bigint::biguint::mont..</text></g><g><title>anoncreds`glass_pumpkin::common::miller_rabin (163,884 samples, 22.35%)</title><rect x="71.4901%" y="245" width="22.3495%" height="15" fill="rgb(235,68,52)" fg:x="524222" fg:w="163884"/><text x="71.7401%" y="255.50">anoncreds`glass_pumpkin::common::mi..</text></g><g><title>anoncreds`alloc::alloc::Global::alloc_impl (205 samples, 0.03%)</title><rect x="94.0927%" y="101" width="0.0280%" height="15" fill="rgb(246,142,3)" fg:x="689962" fg:w="205"/><text x="94.3427%" y="111.50"></text></g><g><title>anoncreds`core::ptr::non_null::NonNull&lt;T&gt;::new (74 samples, 0.01%)</title><rect x="94.1207%" y="101" width="0.0101%" height="15" fill="rgb(241,25,7)" fg:x="690167" fg:w="74"/><text x="94.3707%" y="111.50"></text></g><g><title>anoncreds`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (210 samples, 0.03%)</title><rect x="94.1307%" y="101" width="0.0286%" height="15" fill="rgb(242,119,39)" fg:x="690241" fg:w="210"/><text x="94.3807%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (96 samples, 0.01%)</title><rect x="94.1594%" y="101" width="0.0131%" height="15" fill="rgb(241,98,45)" fg:x="690451" fg:w="96"/><text x="94.4094%" y="111.50"></text></g><g><title>anoncreds`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (768 samples, 0.10%)</title><rect x="94.0856%" y="117" width="0.1047%" height="15" fill="rgb(254,28,30)" fg:x="689910" fg:w="768"/><text x="94.3356%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (131 samples, 0.02%)</title><rect x="94.1725%" y="101" width="0.0179%" height="15" fill="rgb(241,142,54)" fg:x="690547" fg:w="131"/><text x="94.4225%" y="111.50"></text></g><g><title>anoncreds`alloc::alloc::Global::alloc_impl (109 samples, 0.01%)</title><rect x="94.1903%" y="117" width="0.0149%" height="15" fill="rgb(222,85,15)" fg:x="690678" fg:w="109"/><text x="94.4403%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::finish_grow (1,635 samples, 0.22%)</title><rect x="94.0362%" y="133" width="0.2230%" height="15" fill="rgb(210,85,47)" fg:x="689548" fg:w="1635"/><text x="94.2862%" y="143.50"></text></g><g><title>anoncreds`core::result::Result&lt;T,E&gt;::map_err (396 samples, 0.05%)</title><rect x="94.2052%" y="117" width="0.0540%" height="15" fill="rgb(224,206,25)" fg:x="690787" fg:w="396"/><text x="94.4552%" y="127.50"></text></g><g><title>anoncreds`core::alloc::layout::Layout::array::inner (510 samples, 0.07%)</title><rect x="94.2592%" y="133" width="0.0696%" height="15" fill="rgb(243,201,19)" fg:x="691183" fg:w="510"/><text x="94.5092%" y="143.50"></text></g><g><title>anoncreds`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (282 samples, 0.04%)</title><rect x="94.4235%" y="117" width="0.0385%" height="15" fill="rgb(236,59,4)" fg:x="692388" fg:w="282"/><text x="94.6735%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,819 samples, 0.52%)</title><rect x="93.9621%" y="149" width="0.5208%" height="15" fill="rgb(254,179,45)" fg:x="689004" fg:w="3819"/><text x="94.2121%" y="159.50"></text></g><g><title>anoncreds`core::cmp::max_by (1,130 samples, 0.15%)</title><rect x="94.3288%" y="133" width="0.1541%" height="15" fill="rgb(226,14,10)" fg:x="691693" fg:w="1130"/><text x="94.5788%" y="143.50"></text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (153 samples, 0.02%)</title><rect x="94.4620%" y="117" width="0.0209%" height="15" fill="rgb(244,27,41)" fg:x="692670" fg:w="153"/><text x="94.7120%" y="127.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (390 samples, 0.05%)</title><rect x="94.4829%" y="149" width="0.0532%" height="15" fill="rgb(235,35,32)" fg:x="692823" fg:w="390"/><text x="94.7329%" y="159.50"></text></g><g><title>anoncreds`alloc::raw_vec::handle_reserve (202 samples, 0.03%)</title><rect x="94.5384%" y="149" width="0.0275%" height="15" fill="rgb(218,68,31)" fg:x="693230" fg:w="202"/><text x="94.7884%" y="159.50"></text></g><g><title>anoncreds`core::result::Result&lt;T,E&gt;::map_err (124 samples, 0.02%)</title><rect x="94.5490%" y="133" width="0.0169%" height="15" fill="rgb(207,120,37)" fg:x="693308" fg:w="124"/><text x="94.7990%" y="143.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::push (5,499 samples, 0.75%)</title><rect x="93.8935%" y="181" width="0.7499%" height="15" fill="rgb(227,98,0)" fg:x="688501" fg:w="5499"/><text x="94.1435%" y="191.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5,051 samples, 0.69%)</title><rect x="93.9546%" y="165" width="0.6888%" height="15" fill="rgb(207,7,3)" fg:x="688949" fg:w="5051"/><text x="94.2046%" y="175.50"></text></g><g><title>anoncreds`core::num::_&lt;impl usize&gt;::checked_add (568 samples, 0.08%)</title><rect x="94.5659%" y="149" width="0.0775%" height="15" fill="rgb(206,98,19)" fg:x="693432" fg:w="568"/><text x="94.8159%" y="159.50"></text></g><g><title>anoncreds`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5,727 samples, 0.78%)</title><rect x="93.8675%" y="213" width="0.7810%" height="15" fill="rgb(217,5,26)" fg:x="688311" fg:w="5727"/><text x="94.1175%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::convert::_&lt;impl core::convert::From&lt;u64&gt; for num_bigint::biguint::BigUint&gt;::from (5,680 samples, 0.77%)</title><rect x="93.8740%" y="197" width="0.7746%" height="15" fill="rgb(235,190,38)" fg:x="688358" fg:w="5680"/><text x="94.1240%" y="207.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (241 samples, 0.03%)</title><rect x="94.6486%" y="213" width="0.0329%" height="15" fill="rgb(247,86,24)" fg:x="694038" fg:w="241"/><text x="94.8986%" y="223.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (892 samples, 0.12%)</title><rect x="94.8848%" y="197" width="0.1216%" height="15" fill="rgb(205,101,16)" fg:x="695770" fg:w="892"/><text x="95.1348%" y="207.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5,718 samples, 0.78%)</title><rect x="95.0064%" y="197" width="0.7798%" height="15" fill="rgb(246,168,33)" fg:x="696662" fg:w="5718"/><text x="95.2564%" y="207.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (592 samples, 0.08%)</title><rect x="95.8021%" y="197" width="0.0807%" height="15" fill="rgb(231,114,1)" fg:x="702497" fg:w="592"/><text x="96.0521%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;u32&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (24,353 samples, 3.32%)</title><rect x="93.8581%" y="229" width="3.3211%" height="15" fill="rgb(207,184,53)" fg:x="688242" fg:w="24353"/><text x="94.1081%" y="239.50">ano..</text></g><g><title>anoncreds`num_bigint::biguint::division::rem_digit (18,304 samples, 2.50%)</title><rect x="94.6831%" y="213" width="2.4962%" height="15" fill="rgb(224,95,51)" fg:x="694291" fg:w="18304"/><text x="94.9331%" y="223.50">an..</text></g><g><title>anoncreds`num_bigint::biguint::division::div_half (9,506 samples, 1.30%)</title><rect x="95.8829%" y="197" width="1.2964%" height="15" fill="rgb(212,188,45)" fg:x="703089" fg:w="9506"/><text x="96.1329%" y="207.50"></text></g><g><title>anoncreds`&lt;u64 as num_integer::Integer&gt;::div_rem (7,015 samples, 0.96%)</title><rect x="96.2226%" y="181" width="0.9567%" height="15" fill="rgb(223,154,38)" fg:x="705580" fg:w="7015"/><text x="96.4726%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (125 samples, 0.02%)</title><rect x="97.1911%" y="213" width="0.0170%" height="15" fill="rgb(251,22,52)" fg:x="712682" fg:w="125"/><text x="97.4411%" y="223.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (771 samples, 0.11%)</title><rect x="97.2082%" y="213" width="0.1051%" height="15" fill="rgb(229,209,22)" fg:x="712807" fg:w="771"/><text x="97.4582%" y="223.50"></text></g><g><title>anoncreds`core::option::Option&lt;T&gt;::and_then (221 samples, 0.03%)</title><rect x="97.3133%" y="213" width="0.0301%" height="15" fill="rgb(234,138,34)" fg:x="713578" fg:w="221"/><text x="97.5633%" y="223.50"></text></g><g><title>anoncreds`glass_pumpkin::common::_is_prime (647,888 samples, 88.35%)</title><rect x="9.1044%" y="261" width="88.3549%" height="15" fill="rgb(212,95,11)" fg:x="66761" fg:w="647888"/><text x="9.3544%" y="271.50">anoncreds`glass_pumpkin::common::_is_prime</text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (26,527 samples, 3.62%)</title><rect x="93.8418%" y="245" width="3.6176%" height="15" fill="rgb(240,179,47)" fg:x="688122" fg:w="26527"/><text x="94.0918%" y="255.50">anon..</text></g><g><title>anoncreds`num_traits::cast::ToPrimitive::to_u32 (2,054 samples, 0.28%)</title><rect x="97.1792%" y="229" width="0.2801%" height="15" fill="rgb(240,163,11)" fg:x="712595" fg:w="2054"/><text x="97.4292%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::convert::_&lt;impl num_traits::cast::ToPrimitive for num_bigint::biguint::BigUint&gt;::to_u64 (850 samples, 0.12%)</title><rect x="97.3434%" y="213" width="0.1159%" height="15" fill="rgb(236,37,12)" fg:x="713799" fg:w="850"/><text x="97.5934%" y="223.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (498 samples, 0.07%)</title><rect x="97.3914%" y="197" width="0.0679%" height="15" fill="rgb(232,164,16)" fg:x="714151" fg:w="498"/><text x="97.6414%" y="207.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;num_bigint::biguint::BigUint&gt; (116 samples, 0.02%)</title><rect x="97.4607%" y="245" width="0.0158%" height="15" fill="rgb(244,205,15)" fg:x="714659" fg:w="116"/><text x="97.7107%" y="255.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (103 samples, 0.01%)</title><rect x="97.4625%" y="229" width="0.0140%" height="15" fill="rgb(223,117,47)" fg:x="714672" fg:w="103"/><text x="97.7125%" y="239.50"></text></g><g><title>anoncreds`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (102 samples, 0.01%)</title><rect x="97.4626%" y="213" width="0.0139%" height="15" fill="rgb(244,107,35)" fg:x="714673" fg:w="102"/><text x="97.7126%" y="223.50"></text></g><g><title>anoncreds`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.01%)</title><rect x="97.4626%" y="197" width="0.0139%" height="15" fill="rgb(205,140,8)" fg:x="714673" fg:w="102"/><text x="97.7126%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::_&lt;impl core::ops::bit::Shr&lt;usize&gt; for &amp;num_bigint::biguint::BigUint&gt;::shr (147 samples, 0.02%)</title><rect x="97.4816%" y="229" width="0.0200%" height="15" fill="rgb(228,84,46)" fg:x="714812" fg:w="147"/><text x="97.7316%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shr (144 samples, 0.02%)</title><rect x="97.4820%" y="213" width="0.0196%" height="15" fill="rgb(254,188,9)" fg:x="714815" fg:w="144"/><text x="97.7320%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shr2 (130 samples, 0.02%)</title><rect x="97.4839%" y="197" width="0.0177%" height="15" fill="rgb(206,112,54)" fg:x="714829" fg:w="130"/><text x="97.7339%" y="207.50"></text></g><g><title>anoncreds`glass_pumpkin::common::is_bit_set (185 samples, 0.03%)</title><rect x="97.4765%" y="245" width="0.0252%" height="15" fill="rgb(216,84,49)" fg:x="714775" fg:w="185"/><text x="97.7265%" y="255.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.02%)</title><rect x="97.5166%" y="197" width="0.0179%" height="15" fill="rgb(214,194,35)" fg:x="715069" fg:w="131"/><text x="97.7666%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::addition::__add2 (312 samples, 0.04%)</title><rect x="97.5098%" y="213" width="0.0425%" height="15" fill="rgb(249,28,3)" fg:x="715019" fg:w="312"/><text x="97.7598%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::addition::_&lt;impl core::ops::arith::AddAssign&lt;&amp;num_bigint::biguint::BigUint&gt; for num_bigint::biguint::BigUint&gt;::add_assign (365 samples, 0.05%)</title><rect x="97.5041%" y="229" width="0.0498%" height="15" fill="rgb(222,56,52)" fg:x="714977" fg:w="365"/><text x="97.7541%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::addition::_&lt;impl core::ops::arith::Add&lt;&amp;num_bigint::biguint::BigUint&gt; for num_bigint::biguint::BigUint&gt;::add (368 samples, 0.05%)</title><rect x="97.5038%" y="245" width="0.0502%" height="15" fill="rgb(245,217,50)" fg:x="714975" fg:w="368"/><text x="97.7538%" y="255.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (177 samples, 0.02%)</title><rect x="97.5577%" y="197" width="0.0241%" height="15" fill="rgb(213,201,24)" fg:x="715370" fg:w="177"/><text x="97.8077%" y="207.50"></text></g><g><title>anoncreds`alloc::vec::Vec&lt;T,A&gt;::pop (189 samples, 0.03%)</title><rect x="97.6019%" y="197" width="0.0258%" height="15" fill="rgb(248,116,28)" fg:x="715694" fg:w="189"/><text x="97.8519%" y="207.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (182 samples, 0.02%)</title><rect x="97.7118%" y="181" width="0.0248%" height="15" fill="rgb(219,72,43)" fg:x="716500" fg:w="182"/><text x="97.9618%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (253 samples, 0.03%)</title><rect x="97.7366%" y="181" width="0.0345%" height="15" fill="rgb(209,138,14)" fg:x="716682" fg:w="253"/><text x="97.9866%" y="191.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (132 samples, 0.02%)</title><rect x="97.7711%" y="181" width="0.0180%" height="15" fill="rgb(222,18,33)" fg:x="716935" fg:w="132"/><text x="98.0211%" y="191.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (187 samples, 0.03%)</title><rect x="97.8087%" y="165" width="0.0255%" height="15" fill="rgb(213,199,7)" fg:x="717211" fg:w="187"/><text x="98.0587%" y="175.50"></text></g><g><title>anoncreds`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (207 samples, 0.03%)</title><rect x="97.8342%" y="165" width="0.0282%" height="15" fill="rgb(250,110,10)" fg:x="717398" fg:w="207"/><text x="98.0842%" y="175.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (583 samples, 0.08%)</title><rect x="97.7891%" y="181" width="0.0795%" height="15" fill="rgb(248,123,6)" fg:x="717067" fg:w="583"/><text x="98.0391%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.01%)</title><rect x="97.8686%" y="181" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="717650" fg:w="88"/><text x="98.1186%" y="191.50"></text></g><g><title>anoncreds`alloc::vec::from_elem (88 samples, 0.01%)</title><rect x="97.8831%" y="181" width="0.0120%" height="15" fill="rgb(211,154,13)" fg:x="717756" fg:w="88"/><text x="98.1331%" y="191.50"></text></g><g><title>anoncreds`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (86 samples, 0.01%)</title><rect x="97.8833%" y="165" width="0.0117%" height="15" fill="rgb(225,148,7)" fg:x="717758" fg:w="86"/><text x="98.1333%" y="175.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.01%)</title><rect x="97.8850%" y="149" width="0.0101%" height="15" fill="rgb(220,160,43)" fg:x="717770" fg:w="74"/><text x="98.1350%" y="159.50"></text></g><g><title>anoncreds`compiler_builtins::int::specialized_div_rem::u128_div_rem (225 samples, 0.03%)</title><rect x="97.8951%" y="181" width="0.0307%" height="15" fill="rgb(213,52,39)" fg:x="717844" fg:w="225"/><text x="98.1451%" y="191.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::cmp (78 samples, 0.01%)</title><rect x="97.9334%" y="117" width="0.0106%" height="15" fill="rgb(243,137,7)" fg:x="718125" fg:w="78"/><text x="98.1834%" y="127.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::cmp_by (78 samples, 0.01%)</title><rect x="97.9334%" y="101" width="0.0106%" height="15" fill="rgb(230,79,13)" fg:x="718125" fg:w="78"/><text x="98.1834%" y="111.50"></text></g><g><title>anoncreds`core::cmp::PartialOrd::lt (165 samples, 0.02%)</title><rect x="97.9258%" y="181" width="0.0225%" height="15" fill="rgb(247,105,23)" fg:x="718069" fg:w="165"/><text x="98.1758%" y="191.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as core::cmp::PartialOrd&gt;::partial_cmp (164 samples, 0.02%)</title><rect x="97.9259%" y="165" width="0.0224%" height="15" fill="rgb(223,179,41)" fg:x="718070" fg:w="164"/><text x="98.1759%" y="175.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as core::cmp::Ord&gt;::cmp (163 samples, 0.02%)</title><rect x="97.9260%" y="149" width="0.0222%" height="15" fill="rgb(218,9,34)" fg:x="718071" fg:w="163"/><text x="98.1760%" y="159.50"></text></g><g><title>anoncreds`num_bigint::biguint::cmp_slice (127 samples, 0.02%)</title><rect x="97.9309%" y="133" width="0.0173%" height="15" fill="rgb(222,106,8)" fg:x="718107" fg:w="127"/><text x="98.1809%" y="143.50"></text></g><g><title>anoncreds`num_bigint::big_digit::to_doublebigdigit (127 samples, 0.02%)</title><rect x="97.9597%" y="181" width="0.0173%" height="15" fill="rgb(211,220,0)" fg:x="718318" fg:w="127"/><text x="98.2097%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_wide (193 samples, 0.03%)</title><rect x="97.9858%" y="181" width="0.0263%" height="15" fill="rgb(229,52,16)" fg:x="718509" fg:w="193"/><text x="98.2358%" y="191.50"></text></g><g><title>anoncreds`compiler_builtins::int::specialized_div_rem::u128_div_rem (118 samples, 0.02%)</title><rect x="97.9960%" y="165" width="0.0161%" height="15" fill="rgb(212,155,18)" fg:x="718584" fg:w="118"/><text x="98.2460%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,314 samples, 0.18%)</title><rect x="98.2393%" y="149" width="0.1792%" height="15" fill="rgb(242,21,14)" fg:x="720368" fg:w="1314"/><text x="98.4893%" y="159.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (411 samples, 0.06%)</title><rect x="98.4185%" y="149" width="0.0560%" height="15" fill="rgb(222,19,48)" fg:x="721682" fg:w="411"/><text x="98.6685%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,369 samples, 0.32%)</title><rect x="98.2063%" y="165" width="0.3231%" height="15" fill="rgb(232,45,27)" fg:x="720126" fg:w="2369"/><text x="98.4563%" y="175.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (402 samples, 0.05%)</title><rect x="98.4745%" y="149" width="0.0548%" height="15" fill="rgb(249,103,42)" fg:x="722093" fg:w="402"/><text x="98.7245%" y="159.50"></text></g><g><title>anoncreds`core::cmp::min_by (235 samples, 0.03%)</title><rect x="98.5445%" y="117" width="0.0320%" height="15" fill="rgb(246,81,33)" fg:x="722606" fg:w="235"/><text x="98.7945%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (156 samples, 0.02%)</title><rect x="98.5816%" y="101" width="0.0213%" height="15" fill="rgb(252,33,42)" fg:x="722878" fg:w="156"/><text x="98.8316%" y="111.50"></text></g><g><title>anoncreds`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr (82 samples, 0.01%)</title><rect x="98.5917%" y="85" width="0.0112%" height="15" fill="rgb(209,212,41)" fg:x="722952" fg:w="82"/><text x="98.8417%" y="95.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (674 samples, 0.09%)</title><rect x="98.5341%" y="149" width="0.0919%" height="15" fill="rgb(207,154,6)" fg:x="722530" fg:w="674"/><text x="98.7841%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (661 samples, 0.09%)</title><rect x="98.5359%" y="133" width="0.0901%" height="15" fill="rgb(223,64,47)" fg:x="722543" fg:w="661"/><text x="98.7859%" y="143.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (363 samples, 0.05%)</title><rect x="98.5765%" y="117" width="0.0495%" height="15" fill="rgb(211,161,38)" fg:x="722841" fg:w="363"/><text x="98.8265%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (170 samples, 0.02%)</title><rect x="98.6029%" y="101" width="0.0232%" height="15" fill="rgb(219,138,40)" fg:x="723034" fg:w="170"/><text x="98.8529%" y="111.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (191 samples, 0.03%)</title><rect x="98.6260%" y="149" width="0.0260%" height="15" fill="rgb(241,228,46)" fg:x="723204" fg:w="191"/><text x="98.8760%" y="159.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (909 samples, 0.12%)</title><rect x="98.5298%" y="165" width="0.1240%" height="15" fill="rgb(223,209,38)" fg:x="722498" fg:w="909"/><text x="98.7798%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (202 samples, 0.03%)</title><rect x="98.6551%" y="165" width="0.0275%" height="15" fill="rgb(236,164,45)" fg:x="723417" fg:w="202"/><text x="98.9051%" y="175.50"></text></g><g><title>anoncreds`num_bigint::big_digit::from_doublebigdigit (638 samples, 0.09%)</title><rect x="98.6826%" y="165" width="0.0870%" height="15" fill="rgb(231,15,5)" fg:x="723619" fg:w="638"/><text x="98.9326%" y="175.50"></text></g><g><title>anoncreds`num_bigint::big_digit::get_hi (151 samples, 0.02%)</title><rect x="98.7696%" y="165" width="0.0206%" height="15" fill="rgb(252,35,15)" fg:x="724257" fg:w="151"/><text x="99.0196%" y="175.50"></text></g><g><title>anoncreds`num_bigint::big_digit::get_lo (242 samples, 0.03%)</title><rect x="98.7902%" y="165" width="0.0330%" height="15" fill="rgb(248,181,18)" fg:x="724408" fg:w="242"/><text x="99.0402%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_core (8,766 samples, 1.20%)</title><rect x="97.6356%" y="197" width="1.1955%" height="15" fill="rgb(233,39,42)" fg:x="715941" fg:w="8766"/><text x="97.8856%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::sub_mul_digit_same_len (6,005 samples, 0.82%)</title><rect x="98.0121%" y="181" width="0.8189%" height="15" fill="rgb(238,110,33)" fg:x="718702" fg:w="6005"/><text x="98.2621%" y="191.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.03%)</title><rect x="98.8352%" y="165" width="0.0251%" height="15" fill="rgb(233,195,10)" fg:x="724738" fg:w="184"/><text x="99.0852%" y="175.50"></text></g><g><title>anoncreds`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (93 samples, 0.01%)</title><rect x="98.8745%" y="85" width="0.0127%" height="15" fill="rgb(254,105,3)" fg:x="725026" fg:w="93"/><text x="99.1245%" y="95.50"></text></g><g><title>anoncreds`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (105 samples, 0.01%)</title><rect x="98.8738%" y="101" width="0.0143%" height="15" fill="rgb(221,225,9)" fg:x="725021" fg:w="105"/><text x="99.1238%" y="111.50"></text></g><g><title>anoncreds`alloc::borrow::Cow&lt;B&gt;::into_owned (113 samples, 0.02%)</title><rect x="98.8738%" y="149" width="0.0154%" height="15" fill="rgb(224,227,45)" fg:x="725021" fg:w="113"/><text x="99.1238%" y="159.50"></text></g><g><title>anoncreds`&lt;T as alloc::borrow::ToOwned&gt;::to_owned (113 samples, 0.02%)</title><rect x="98.8738%" y="133" width="0.0154%" height="15" fill="rgb(229,198,43)" fg:x="725021" fg:w="113"/><text x="99.1238%" y="143.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as core::clone::Clone&gt;::clone (113 samples, 0.02%)</title><rect x="98.8738%" y="117" width="0.0154%" height="15" fill="rgb(206,209,35)" fg:x="725021" fg:w="113"/><text x="99.1238%" y="127.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::_&lt;impl core::ops::bit::Shl&lt;usize&gt; for &amp;num_bigint::biguint::BigUint&gt;::shl (444 samples, 0.06%)</title><rect x="98.8329%" y="197" width="0.0605%" height="15" fill="rgb(245,195,53)" fg:x="724721" fg:w="444"/><text x="99.0829%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shl (428 samples, 0.06%)</title><rect x="98.8351%" y="181" width="0.0584%" height="15" fill="rgb(240,92,26)" fg:x="724737" fg:w="428"/><text x="99.0851%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shl2 (236 samples, 0.03%)</title><rect x="98.8613%" y="165" width="0.0322%" height="15" fill="rgb(207,40,23)" fg:x="724929" fg:w="236"/><text x="99.1113%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::_&lt;impl core::ops::bit::Shr&lt;usize&gt; for num_bigint::biguint::BigUint&gt;::shr (235 samples, 0.03%)</title><rect x="98.8935%" y="197" width="0.0320%" height="15" fill="rgb(223,111,35)" fg:x="725165" fg:w="235"/><text x="99.1435%" y="207.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shr (208 samples, 0.03%)</title><rect x="98.8971%" y="181" width="0.0284%" height="15" fill="rgb(229,147,28)" fg:x="725192" fg:w="208"/><text x="99.1471%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::shift::biguint_shr2 (194 samples, 0.03%)</title><rect x="98.8991%" y="165" width="0.0265%" height="15" fill="rgb(211,29,28)" fg:x="725206" fg:w="194"/><text x="99.1491%" y="175.50"></text></g><g><title>anoncreds`&lt;num_bigint::biguint::BigUint as num_integer::Integer&gt;::div_rem (10,052 samples, 1.37%)</title><rect x="97.5548%" y="229" width="1.3708%" height="15" fill="rgb(228,72,33)" fg:x="715349" fg:w="10052"/><text x="97.8048%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::div_rem_ref (10,043 samples, 1.37%)</title><rect x="97.5560%" y="213" width="1.3696%" height="15" fill="rgb(205,214,31)" fg:x="715358" fg:w="10043"/><text x="97.8060%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::division::_&lt;impl core::ops::arith::Rem&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::rem (10,150 samples, 1.38%)</title><rect x="97.5540%" y="245" width="1.3842%" height="15" fill="rgb(224,111,15)" fg:x="715343" fg:w="10150"/><text x="97.8040%" y="255.50"></text></g><g><title>anoncreds`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (110 samples, 0.02%)</title><rect x="98.9468%" y="197" width="0.0150%" height="15" fill="rgb(253,21,26)" fg:x="725556" fg:w="110"/><text x="99.1968%" y="207.50"></text></g><g><title>anoncreds`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (86 samples, 0.01%)</title><rect x="98.9501%" y="181" width="0.0117%" height="15" fill="rgb(245,139,43)" fg:x="725580" fg:w="86"/><text x="99.2001%" y="191.50"></text></g><g><title>anoncreds`alloc::vec::from_elem (111 samples, 0.02%)</title><rect x="98.9468%" y="213" width="0.0151%" height="15" fill="rgb(252,170,7)" fg:x="725556" fg:w="111"/><text x="99.1968%" y="223.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.01%)</title><rect x="98.9772%" y="197" width="0.0101%" height="15" fill="rgb(231,118,14)" fg:x="725779" fg:w="74"/><text x="99.2272%" y="207.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (208 samples, 0.03%)</title><rect x="98.9880%" y="197" width="0.0284%" height="15" fill="rgb(238,83,0)" fg:x="725858" fg:w="208"/><text x="99.2380%" y="207.50"></text></g><g><title>anoncreds`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (159 samples, 0.02%)</title><rect x="99.0192%" y="181" width="0.0217%" height="15" fill="rgb(221,39,39)" fg:x="726087" fg:w="159"/><text x="99.2692%" y="191.50"></text></g><g><title>anoncreds`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (348 samples, 0.05%)</title><rect x="99.0170%" y="197" width="0.0475%" height="15" fill="rgb(222,119,46)" fg:x="726071" fg:w="348"/><text x="99.2670%" y="207.50"></text></g><g><title>anoncreds`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (173 samples, 0.02%)</title><rect x="99.0409%" y="181" width="0.0236%" height="15" fill="rgb(222,165,49)" fg:x="726246" fg:w="173"/><text x="99.2909%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,045 samples, 0.14%)</title><rect x="99.1441%" y="165" width="0.1425%" height="15" fill="rgb(219,113,52)" fg:x="727003" fg:w="1045"/><text x="99.3941%" y="175.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (298 samples, 0.04%)</title><rect x="99.2866%" y="165" width="0.0406%" height="15" fill="rgb(214,7,15)" fg:x="728048" fg:w="298"/><text x="99.5366%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,759 samples, 0.24%)</title><rect x="99.1314%" y="181" width="0.2399%" height="15" fill="rgb(235,32,4)" fg:x="726910" fg:w="1759"/><text x="99.3814%" y="191.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (323 samples, 0.04%)</title><rect x="99.3273%" y="165" width="0.0440%" height="15" fill="rgb(238,90,54)" fg:x="728346" fg:w="323"/><text x="99.5773%" y="175.50"></text></g><g><title>anoncreds`core::cmp::min_by (157 samples, 0.02%)</title><rect x="99.3881%" y="133" width="0.0214%" height="15" fill="rgb(213,208,19)" fg:x="728792" fg:w="157"/><text x="99.6381%" y="143.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (94 samples, 0.01%)</title><rect x="99.4163%" y="117" width="0.0128%" height="15" fill="rgb(233,156,4)" fg:x="728999" fg:w="94"/><text x="99.6663%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (140 samples, 0.02%)</title><rect x="99.4291%" y="117" width="0.0191%" height="15" fill="rgb(207,194,5)" fg:x="729093" fg:w="140"/><text x="99.6791%" y="127.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (503 samples, 0.07%)</title><rect x="99.3798%" y="165" width="0.0686%" height="15" fill="rgb(206,111,30)" fg:x="728731" fg:w="503"/><text x="99.6298%" y="175.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (493 samples, 0.07%)</title><rect x="99.3811%" y="149" width="0.0672%" height="15" fill="rgb(243,70,54)" fg:x="728741" fg:w="493"/><text x="99.6311%" y="159.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (285 samples, 0.04%)</title><rect x="99.4095%" y="133" width="0.0389%" height="15" fill="rgb(242,28,8)" fg:x="728949" fg:w="285"/><text x="99.6595%" y="143.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (157 samples, 0.02%)</title><rect x="99.4484%" y="165" width="0.0214%" height="15" fill="rgb(219,106,18)" fg:x="729234" fg:w="157"/><text x="99.6984%" y="175.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (721 samples, 0.10%)</title><rect x="99.3728%" y="181" width="0.0983%" height="15" fill="rgb(244,222,10)" fg:x="728680" fg:w="721"/><text x="99.6228%" y="191.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::split_at_mut (121 samples, 0.02%)</title><rect x="99.4735%" y="181" width="0.0165%" height="15" fill="rgb(236,179,52)" fg:x="729418" fg:w="121"/><text x="99.7235%" y="191.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (230 samples, 0.03%)</title><rect x="99.4900%" y="181" width="0.0314%" height="15" fill="rgb(213,23,39)" fg:x="729539" fg:w="230"/><text x="99.7400%" y="191.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (186 samples, 0.03%)</title><rect x="99.5213%" y="181" width="0.0254%" height="15" fill="rgb(238,48,10)" fg:x="729769" fg:w="186"/><text x="99.7713%" y="191.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (89 samples, 0.01%)</title><rect x="99.5714%" y="149" width="0.0121%" height="15" fill="rgb(251,196,23)" fg:x="730136" fg:w="89"/><text x="99.8214%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.02%)</title><rect x="99.5689%" y="165" width="0.0179%" height="15" fill="rgb(250,152,24)" fg:x="730118" fg:w="131"/><text x="99.8189%" y="175.50"></text></g><g><title>anoncreds`core::cmp::min_by (142 samples, 0.02%)</title><rect x="99.6072%" y="117" width="0.0194%" height="15" fill="rgb(209,150,17)" fg:x="730399" fg:w="142"/><text x="99.8572%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (93 samples, 0.01%)</title><rect x="99.6338%" y="101" width="0.0127%" height="15" fill="rgb(234,202,34)" fg:x="730594" fg:w="93"/><text x="99.8838%" y="111.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (462 samples, 0.06%)</title><rect x="99.5984%" y="149" width="0.0630%" height="15" fill="rgb(253,148,53)" fg:x="730334" fg:w="462"/><text x="99.8484%" y="159.50"></text></g><g><title>anoncreds`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (449 samples, 0.06%)</title><rect x="99.6002%" y="133" width="0.0612%" height="15" fill="rgb(218,129,16)" fg:x="730347" fg:w="449"/><text x="99.8502%" y="143.50"></text></g><g><title>anoncreds`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (255 samples, 0.03%)</title><rect x="99.6266%" y="117" width="0.0348%" height="15" fill="rgb(216,85,19)" fg:x="730541" fg:w="255"/><text x="99.8766%" y="127.50"></text></g><g><title>anoncreds`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (109 samples, 0.01%)</title><rect x="99.6465%" y="101" width="0.0149%" height="15" fill="rgb(235,228,7)" fg:x="730687" fg:w="109"/><text x="99.8965%" y="111.50"></text></g><g><title>anoncreds`core::slice::iter::Iter&lt;T&gt;::new (129 samples, 0.02%)</title><rect x="99.6614%" y="149" width="0.0176%" height="15" fill="rgb(245,175,0)" fg:x="730796" fg:w="129"/><text x="99.9114%" y="159.50"></text></g><g><title>anoncreds`core::iter::traits::iterator::Iterator::zip (685 samples, 0.09%)</title><rect x="99.5876%" y="165" width="0.0934%" height="15" fill="rgb(208,168,36)" fg:x="730255" fg:w="685"/><text x="99.8376%" y="175.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::split_at_mut (78 samples, 0.01%)</title><rect x="99.6824%" y="165" width="0.0106%" height="15" fill="rgb(246,171,24)" fg:x="730950" fg:w="78"/><text x="99.9324%" y="175.50"></text></g><g><title>anoncreds`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (229 samples, 0.03%)</title><rect x="99.6930%" y="165" width="0.0312%" height="15" fill="rgb(215,142,24)" fg:x="731028" fg:w="229"/><text x="99.9430%" y="175.50"></text></g><g><title>anoncreds`core::slice::iter::IterMut&lt;T&gt;::new (163 samples, 0.02%)</title><rect x="99.7243%" y="165" width="0.0222%" height="15" fill="rgb(250,187,7)" fg:x="731257" fg:w="163"/><text x="99.9743%" y="175.50"></text></g><g><title>anoncreds`num_bigint::biguint::addition::__add2 (1,533 samples, 0.21%)</title><rect x="99.5523%" y="181" width="0.2091%" height="15" fill="rgb(228,66,33)" fg:x="729996" fg:w="1533"/><text x="99.8023%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::multiplication::mac_with_carry (1,402 samples, 0.19%)</title><rect x="99.7620%" y="181" width="0.1912%" height="15" fill="rgb(234,215,21)" fg:x="731534" fg:w="1402"/><text x="100.0120%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::multiplication::mac_digit (6,627 samples, 0.90%)</title><rect x="99.0656%" y="197" width="0.9037%" height="15" fill="rgb(222,191,20)" fg:x="726427" fg:w="6627"/><text x="99.3156%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (118 samples, 0.02%)</title><rect x="99.9532%" y="181" width="0.0161%" height="15" fill="rgb(245,79,54)" fg:x="732936" fg:w="118"/><text x="100.2032%" y="191.50"></text></g><g><title>anoncreds`num_bigint::biguint::multiplication::mac3 (7,408 samples, 1.01%)</title><rect x="98.9689%" y="213" width="1.0103%" height="15" fill="rgb(240,10,37)" fg:x="725718" fg:w="7408"/><text x="99.2189%" y="223.50"></text></g><g><title>anoncreds`num_bigint::biguint::multiplication::_&lt;impl core::ops::arith::Mul&lt;&amp;num_bigint::biguint::BigUint&gt; for &amp;num_bigint::biguint::BigUint&gt;::mul (7,640 samples, 1.04%)</title><rect x="98.9382%" y="245" width="1.0419%" height="15" fill="rgb(214,192,32)" fg:x="725493" fg:w="7640"/><text x="99.1882%" y="255.50"></text></g><g><title>anoncreds`num_bigint::biguint::multiplication::mul3 (7,593 samples, 1.04%)</title><rect x="98.9446%" y="229" width="1.0355%" height="15" fill="rgb(209,36,54)" fg:x="725540" fg:w="7593"/><text x="99.1946%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::subtraction::_&lt;impl core::ops::arith::SubAssign&lt;u64&gt; for num_bigint::biguint::BigUint&gt;::sub_assign (93 samples, 0.01%)</title><rect x="99.9804%" y="229" width="0.0127%" height="15" fill="rgb(220,10,11)" fg:x="733135" fg:w="93"/><text x="100.2304%" y="239.50"></text></g><g><title>anoncreds`num_bigint::biguint::subtraction::sub2 (74 samples, 0.01%)</title><rect x="99.9830%" y="213" width="0.0101%" height="15" fill="rgb(221,106,17)" fg:x="733154" fg:w="74"/><text x="100.2330%" y="223.50"></text></g><g><title>anoncreds`glass_pumpkin::common::lucas (18,579 samples, 2.53%)</title><rect x="97.4595%" y="261" width="2.5337%" height="15" fill="rgb(251,142,44)" fg:x="714650" fg:w="18579"/><text x="97.7095%" y="271.50">an..</text></g><g><title>anoncreds`num_bigint::biguint::subtraction::_&lt;impl core::ops::arith::Sub&lt;u64&gt; for num_bigint::biguint::BigUint&gt;::sub (94 samples, 0.01%)</title><rect x="99.9804%" y="245" width="0.0128%" height="15" fill="rgb(238,13,15)" fg:x="733135" fg:w="94"/><text x="100.2304%" y="255.50"></text></g><g><title>anoncreds`glass_pumpkin::common::gen_prime (667,394 samples, 91.02%)</title><rect x="8.9848%" y="277" width="91.0150%" height="15" fill="rgb(208,107,27)" fg:x="65884" fg:w="667394"/><text x="9.2348%" y="287.50">anoncreds`glass_pumpkin::common::gen_prime</text></g><g><title>all (733,279 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(205,136,37)" fg:x="0" fg:w="733279"/><text x="0.2500%" y="559.50"></text></g><g><title>dyld`start (730,083 samples, 99.56%)</title><rect x="0.4359%" y="533" width="99.5641%" height="15" fill="rgb(250,205,27)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="543.50">dyld`start</text></g><g><title>anoncreds`main (730,083 samples, 99.56%)</title><rect x="0.4359%" y="517" width="99.5641%" height="15" fill="rgb(210,80,43)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="527.50">anoncreds`main</text></g><g><title>anoncreds`std::rt::lang_start (730,083 samples, 99.56%)</title><rect x="0.4359%" y="501" width="99.5641%" height="15" fill="rgb(247,160,36)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="511.50">anoncreds`std::rt::lang_start</text></g><g><title>anoncreds`std::rt::lang_start_internal (730,083 samples, 99.56%)</title><rect x="0.4359%" y="485" width="99.5641%" height="15" fill="rgb(234,13,49)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="495.50">anoncreds`std::rt::lang_start_internal</text></g><g><title>anoncreds`std::rt::lang_start::_{{closure}} (730,083 samples, 99.56%)</title><rect x="0.4359%" y="469" width="99.5641%" height="15" fill="rgb(234,122,0)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="479.50">anoncreds`std::rt::lang_start::_{{closure}}</text></g><g><title>anoncreds`std::sys_common::backtrace::__rust_begin_short_backtrace (730,083 samples, 99.56%)</title><rect x="0.4359%" y="453" width="99.5641%" height="15" fill="rgb(207,146,38)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="463.50">anoncreds`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>anoncreds`core::ops::function::FnOnce::call_once (730,083 samples, 99.56%)</title><rect x="0.4359%" y="437" width="99.5641%" height="15" fill="rgb(207,177,25)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="447.50">anoncreds`core::ops::function::FnOnce::call_once</text></g><g><title>anoncreds`anoncreds::main (730,083 samples, 99.56%)</title><rect x="0.4359%" y="421" width="99.5641%" height="15" fill="rgb(211,178,42)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="431.50">anoncreds`anoncreds::main</text></g><g><title>anoncreds`anoncreds::services::issuer::create_credential_definition (730,083 samples, 99.56%)</title><rect x="0.4359%" y="405" width="99.5641%" height="15" fill="rgb(230,69,54)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="415.50">anoncreds`anoncreds::services::issuer::create_credential_definition</text></g><g><title>anoncreds`ursa::cl::issuer::Issuer::new_credential_def (730,083 samples, 99.56%)</title><rect x="0.4359%" y="389" width="99.5641%" height="15" fill="rgb(214,135,41)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="399.50">anoncreds`ursa::cl::issuer::Issuer::new_credential_def</text></g><g><title>anoncreds`ursa::cl::issuer::Issuer::_new_credential_primary_keys (730,083 samples, 99.56%)</title><rect x="0.4359%" y="373" width="99.5641%" height="15" fill="rgb(237,67,25)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="383.50">anoncreds`ursa::cl::issuer::Issuer::_new_credential_primary_keys</text></g><g><title>anoncreds`ursa::cl::helpers::generate_safe_prime (730,083 samples, 99.56%)</title><rect x="0.4359%" y="357" width="99.5641%" height="15" fill="rgb(222,189,50)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="367.50">anoncreds`ursa::cl::helpers::generate_safe_prime</text></g><g><title>anoncreds`ursa::cl::helpers::_generate_safe_prime (730,083 samples, 99.56%)</title><rect x="0.4359%" y="341" width="99.5641%" height="15" fill="rgb(245,148,34)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="351.50">anoncreds`ursa::cl::helpers::_generate_safe_prime</text></g><g><title>anoncreds`ursa::bn::BigNumber::generate_safe_prime (730,083 samples, 99.56%)</title><rect x="0.4359%" y="325" width="99.5641%" height="15" fill="rgb(222,29,6)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="335.50">anoncreds`ursa::bn::BigNumber::generate_safe_prime</text></g><g><title>anoncreds`glass_pumpkin::safe_prime::new (730,083 samples, 99.56%)</title><rect x="0.4359%" y="309" width="99.5641%" height="15" fill="rgb(221,189,43)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="319.50">anoncreds`glass_pumpkin::safe_prime::new</text></g><g><title>anoncreds`glass_pumpkin::common::gen_safe_prime (730,083 samples, 99.56%)</title><rect x="0.4359%" y="293" width="99.5641%" height="15" fill="rgb(207,36,27)" fg:x="3196" fg:w="730083"/><text x="0.6859%" y="303.50">anoncreds`glass_pumpkin::common::gen_safe_prime</text></g></svg></svg>